;;-*- coding: utf-8 -*-
;; sci-math-symbol.el -- a mode to input math chars

;; Copyright © 2010, 2011 by Xah Lee

;; Author: Xah Lee ( http://xahlee.org/ )
;; adapted my scinart;
;; Keywords: math symbols, unicode, input

;; You can redistribute this program and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2.

;;; DESCRIPTION

;; A minor mode for inputing hundreds of math symbols
;; for download location and documentation, see:
;; http://ergoemacs.org/emacs/sci-math-symbols-input.html

;;; INSTALL

;; Open the file, then type 【Alt+x eval-buffer】. That's it.

;; To have emacs automatically load the file when it restarts, follow these steps:

;; Rename the file to 〔sci-math-symbols-input.el〕 (if the file is not already that name).
;; place the file in the dir 〔~/.emacs.d/〕. On Windows, it's 〔$HOMEPATH\.emacs.d\〕. Create the 〔.emacs.d〕 folder if you don't have it.

;; Now, put the following lines in your emacs init file “.emacs”:

;; (add-to-list 'load-path "~/.emacs.d/")
;; (autoload 'sci-mode "sci-math-symbols-input" "Load sci minor mode for inputting math (Unicode) symbols." t)
;; (sci-mode 1) ; activate the mode.

;; Then, restart emacs.

;;; DOCUMENTATION

;; Type “inf”, then press 【Shift+Space】, then it becomes “∞”.
;; Other examples:
;; “a” ⇒ “α”.
;; “p” ⇒ “π”.
;; “!=” ⇒ “≠”.
;; “>=” ⇒ “≥”.
;; “=>” ⇒ “⇒”.
;; “->” ⇒ “→”.
;; “and” ⇒ “∧”.
;; etc.

;; For full list, call “sci-list-math-symbols”.

;; The abbreviations are based on Mathematica's aliases 【Esc abbrv Esc】 and SGML/HTML/XML char entity abbreviations.

;; Full documentation is at: http://ergoemacs.org/emacs/sci-math-symbols-input.html

;; To see the inline documentation, call “describe-function”, then type “sci-mode”.
;; (if you have not load the mode yet, first load it by calling “sci-mode”.)

;; Donation of $3 is appreciated. Paypal to 〔xah@xahlee.org〕

;;; Code:

;; (progn
;;   (setq sci-abrvs (make-hash-table :test 'equal))

;;   (progn
;;     ;; sgml/html/xhtml/xml entities
;;     (puthash "nbsp" " " sci-abrvs)
;;     (puthash "bull" "•" sci-abrvs)
;;     (puthash "!" "¡" sci-abrvs)
;;     (puthash "cent" "¢" sci-abrvs)
;;     (puthash "pound" "£" sci-abrvs)
;;     (puthash "curren" "¤" sci-abrvs)
;;     (puthash "yen" "¥" sci-abrvs)
;;     (puthash "brvbar" "¦" sci-abrvs)
;;     (puthash "sect" "§" sci-abrvs)
;;     (puthash "uml" "¨" sci-abrvs)
;;     (puthash "copy" "©" sci-abrvs)
;;     (puthash "ordf" "ª" sci-abrvs)
;;     (puthash "laquo" "«" sci-abrvs)
;;     (puthash "not" "¬" sci-abrvs)
;;     (puthash "reg" "®" sci-abrvs)
;;     (puthash "macr" "¯" sci-abrvs)
;;     (puthash "deg" "°" sci-abrvs)
;;     (puthash "plusmn" "±" sci-abrvs)
;;     (puthash "sup2" "²" sci-abrvs)
;;     (puthash "sup3" "³" sci-abrvs)
;;     (puthash "acute" "´" sci-abrvs)
;;     (puthash "micro" "µ" sci-abrvs)
;;     (puthash "para" "¶" sci-abrvs)
;;     (puthash "middot" "·" sci-abrvs)
;;     (puthash "cedil" "¸" sci-abrvs)
;;     (puthash "sup1" "¹" sci-abrvs)
;;     (puthash "ordm" "º" sci-abrvs)
;;     (puthash "raquo" "»" sci-abrvs)
;;     (puthash "frac14" "¼" sci-abrvs)
;;     (puthash "frac12" "½" sci-abrvs)
;;     (puthash "frac34" "¾" sci-abrvs)
;;     (puthash "iquest" "¿" sci-abrvs)
;;     (puthash "Agrave" "À" sci-abrvs)
;;     (puthash "Aacute" "Á" sci-abrvs)
;;     (puthash "Acirc" "Â" sci-abrvs)
;;     (puthash "Atilde" "Ã" sci-abrvs)
;;     (puthash "Auml" "Ä" sci-abrvs)
;;     (puthash "Aring" "Å" sci-abrvs)
;;     (puthash "AElig" "Æ" sci-abrvs)
;;     (puthash "Ccedil" "Ç" sci-abrvs)
;;     (puthash "Egrave" "È" sci-abrvs)
;;     (puthash "Eacute" "É" sci-abrvs)
;;     (puthash "Ecirc" "Ê" sci-abrvs)
;;     (puthash "Euml" "Ë" sci-abrvs)
;;     (puthash "Igrave" "Ì" sci-abrvs)
;;     (puthash "Iacute" "Í" sci-abrvs)
;;     (puthash "Icirc" "Î" sci-abrvs)
;;     (puthash "Iuml" "Ï" sci-abrvs)
;;     (puthash "ETH" "Ð" sci-abrvs)
;;     (puthash "Ntilde" "Ñ" sci-abrvs)
;;     (puthash "Ograve" "Ò" sci-abrvs)
;;     (puthash "Oacute" "Ó" sci-abrvs)
;;     (puthash "Ocirc" "Ô" sci-abrvs)
;;     (puthash "Otilde" "Õ" sci-abrvs)
;;     (puthash "Ouml" "Ö" sci-abrvs)
;;     (puthash "times" "×" sci-abrvs)
;;     (puthash "Oslash" "Ø" sci-abrvs)
;;     (puthash "Ugrave" "Ù" sci-abrvs)
;;     (puthash "Uacute" "Ú" sci-abrvs)
;;     (puthash "Ucirc" "Û" sci-abrvs)
;;     (puthash "Uuml" "Ü" sci-abrvs)
;;     (puthash "Yacute" "Ý" sci-abrvs)
;;     (puthash "THORN" "Þ" sci-abrvs)
;;     (puthash "szlig" "ß" sci-abrvs)
;;     (puthash "agrave" "à" sci-abrvs)
;;     (puthash "aacute" "á" sci-abrvs)
;;     (puthash "acirc" "â" sci-abrvs)
;;     (puthash "atilde" "ã" sci-abrvs)
;;     (puthash "auml" "ä" sci-abrvs)
;;     (puthash "aring" "å" sci-abrvs)
;;     (puthash "aelig" "æ" sci-abrvs)
;;     (puthash "ccedil" "ç" sci-abrvs)
;;     (puthash "egrave" "è" sci-abrvs)
;;     (puthash "eacute" "é" sci-abrvs)
;;     (puthash "ecirc" "ê" sci-abrvs)
;;     (puthash "euml" "ë" sci-abrvs)
;;     (puthash "igrave" "ì" sci-abrvs)
;;     (puthash "iacute" "í" sci-abrvs)
;;     (puthash "icirc" "î" sci-abrvs)
;;     (puthash "iuml" "ï" sci-abrvs)
;;     (puthash "eth" "ð" sci-abrvs)
;;     (puthash "ntilde" "ñ" sci-abrvs)
;;     (puthash "ograve" "ò" sci-abrvs)
;;     (puthash "oacute" "ó" sci-abrvs)
;;     (puthash "ocirc" "ô" sci-abrvs)
;;     (puthash "otilde" "õ" sci-abrvs)
;;     (puthash "ouml" "ö" sci-abrvs)
;;     (puthash "divide" "÷" sci-abrvs)
;;     (puthash "oslash" "ø" sci-abrvs)
;;     (puthash "ugrave" "ù" sci-abrvs)
;;     (puthash "uacute" "ú" sci-abrvs)
;;     (puthash "ucirc" "û" sci-abrvs)
;;     (puthash "uuml" "ü" sci-abrvs)
;;     (puthash "yacute" "ý" sci-abrvs)
;;     (puthash "thorn" "þ" sci-abrvs)
;;     (puthash "yuml" "ÿ" sci-abrvs)
;;     (puthash "OElig" "Œ" sci-abrvs)
;;     (puthash "oelig" "œ" sci-abrvs)
;;     (puthash "Scaron" "Š" sci-abrvs)
;;     (puthash "scaron" "š" sci-abrvs)
;;     (puthash "Yuml" "Ÿ" sci-abrvs)
;;     (puthash "fnof" "ƒ" sci-abrvs)
;;     (puthash "circ" "ˆ" sci-abrvs)
;;     (puthash "tilde" "˜" sci-abrvs)
;;     (puthash "Alpha" "Α" sci-abrvs)
;;     (puthash "Beta" "Β" sci-abrvs)
;;     (puthash "Gamma" "Γ" sci-abrvs)
;;     (puthash "Delta" "Δ" sci-abrvs)
;;     (puthash "Epsilon" "Ε" sci-abrvs)
;;     (puthash "Zeta" "Ζ" sci-abrvs)
;;     (puthash "Eta" "Η" sci-abrvs)
;;     (puthash "Theta" "Θ" sci-abrvs)
;;     (puthash "Iota" "Ι" sci-abrvs)
;;     (puthash "Kappa" "Κ" sci-abrvs)
;;     (puthash "Lambda" "Λ" sci-abrvs)
;;     (puthash "Mu" "Μ" sci-abrvs)
;;     (puthash "Nu" "Ν" sci-abrvs)
;;     (puthash "Xi" "Ξ" sci-abrvs)
;;     (puthash "Omicron" "Ο" sci-abrvs)
;;     (puthash "Pi" "Π" sci-abrvs)
;;     (puthash "Rho" "Ρ" sci-abrvs)
;;     (puthash "Sigma" "Σ" sci-abrvs)
;;     (puthash "Tau" "Τ" sci-abrvs)
;;     (puthash "Upsilon" "Υ" sci-abrvs)
;;     (puthash "Phi" "Φ" sci-abrvs)
;;     (puthash "Chi" "Χ" sci-abrvs)
;;     (puthash "Psi" "Ψ" sci-abrvs)
;;     (puthash "Omega" "Ω" sci-abrvs)
;;     (puthash "alpha" "α" sci-abrvs)
;;     (puthash "beta" "β" sci-abrvs)
;;     (puthash "gamma" "γ" sci-abrvs)
;;     (puthash "delta" "δ" sci-abrvs)
;;     (puthash "epsilon" "ε" sci-abrvs)
;;     (puthash "zeta" "ζ" sci-abrvs)
;;     (puthash "eta" "η" sci-abrvs)
;;     (puthash "theta" "θ" sci-abrvs)
;;     (puthash "iota" "ι" sci-abrvs)
;;     (puthash "kappa" "κ" sci-abrvs)
;;     (puthash "lambda" "λ" sci-abrvs)
;;     (puthash "mu" "μ" sci-abrvs)
;;     (puthash "nu" "ν" sci-abrvs)
;;     (puthash "xi" "ξ" sci-abrvs)
;;     (puthash "omicron" "ο" sci-abrvs)
;;     (puthash "pi" "π" sci-abrvs)
;;     (puthash "rho" "ρ" sci-abrvs)
;;     (puthash "sigmaf" "ς" sci-abrvs)
;;     (puthash "sigma" "σ" sci-abrvs)
;;     (puthash "tau" "τ" sci-abrvs)
;;     (puthash "upsilon" "υ" sci-abrvs)
;;     (puthash "phi" "φ" sci-abrvs)
;;     (puthash "chi" "χ" sci-abrvs)
;;     (puthash "psi" "ψ" sci-abrvs)
;;     (puthash "omega" "ω" sci-abrvs)
;;     (puthash "thetasym" "ϑ" sci-abrvs)
;;     (puthash "upsih" "ϒ" sci-abrvs)
;;     (puthash "piv" "ϖ" sci-abrvs)
;;     (puthash "ndash" "–" sci-abrvs)
;;     (puthash "mdash" "—" sci-abrvs)
;;     (puthash "lsquo" "‘" sci-abrvs)
;;     (puthash "rsquo" "’" sci-abrvs)
;;     (puthash "sbquo" "‚" sci-abrvs)
;;     (puthash "ldquo" "“" sci-abrvs)
;;     (puthash "rdquo" "”" sci-abrvs)
;;     (puthash "bdquo" "„" sci-abrvs)
;;     (puthash "dagger" "†" sci-abrvs)
;;     (puthash "Dagger" "‡" sci-abrvs)
;;     (puthash "hellip" "…" sci-abrvs)
;;     (puthash "permil" "‰" sci-abrvs)
;;     (puthash "prime" "′" sci-abrvs)
;;     (puthash "Prime" "″" sci-abrvs)
;;     (puthash "lsaquo" "‹" sci-abrvs)
;;     (puthash "rsaquo" "›" sci-abrvs)
;;     (puthash "oline" "‾" sci-abrvs)
;;     (puthash "frasl" "⁄" sci-abrvs)
;;     (puthash "euro" "€" sci-abrvs)
;;     (puthash "image" "ℑ" sci-abrvs)
;;     (puthash "weierp" "℘" sci-abrvs)
;;     (puthash "real" "ℜ" sci-abrvs)
;;     (puthash "trade" "™" sci-abrvs)
;;     (puthash "alefsym" "ℵ" sci-abrvs)
;;     (puthash "larr" "←" sci-abrvs)
;;     (puthash "uarr" "↑" sci-abrvs)
;;     (puthash "rarr" "→" sci-abrvs)
;;     (puthash "darr" "↓" sci-abrvs)
;;     (puthash "harr" "↔" sci-abrvs)
;;     (puthash "crarr" "↵" sci-abrvs)
;;     (puthash "lArr" "⇐" sci-abrvs)
;;     (puthash "uArr" "⇑" sci-abrvs)
;;     (puthash "rArr" "⇒" sci-abrvs)
;;     (puthash "dArr" "⇓" sci-abrvs)
;;     (puthash "hArr" "⇔" sci-abrvs)
;;     (puthash "forall" "∀" sci-abrvs)
;;     (puthash "part" "∂" sci-abrvs)
;;     (puthash "exist" "∃" sci-abrvs)
;;     (puthash "nabla" "∇" sci-abrvs)
;;     (puthash "isin" "∈" sci-abrvs)
;;     (puthash "notin" "∉" sci-abrvs)
;;     (puthash "ni" "∋" sci-abrvs)
;;     (puthash "prod" "∏" sci-abrvs)
;;     (puthash "sum" "∑" sci-abrvs)
;;     (puthash "minus" "−" sci-abrvs)
;;     (puthash "lowast" "∗" sci-abrvs)
;;     (puthash "radic" "√" sci-abrvs)
;;     (puthash "prop" "∝" sci-abrvs)
;;     (puthash "infin" "∞" sci-abrvs)
;;     (puthash "ang" "∠" sci-abrvs)
;;     (puthash "and" "∧" sci-abrvs)
;;     (puthash "or" "∨" sci-abrvs)
;;     (puthash "cap" "∩" sci-abrvs)
;;     (puthash "cup" "∪" sci-abrvs)
;;     (puthash "int" "∫" sci-abrvs)
;;     (puthash "there4" "∴" sci-abrvs)
;;     (puthash "sim" "∼" sci-abrvs)
;;     (puthash "cong" "≅" sci-abrvs)
;;     (puthash "asymp" "≈" sci-abrvs)
;;     (puthash "ne" "≠" sci-abrvs)
;;     (puthash "equiv" "≡" sci-abrvs)
;;     (puthash "le" "≤" sci-abrvs)
;;     (puthash "ge" "≥" sci-abrvs)
;;     (puthash "sub" "⊂" sci-abrvs)
;;     (puthash "sup" "⊃" sci-abrvs)
;;     (puthash "nsub" "⊄" sci-abrvs)
;;     (puthash "sube" "⊆" sci-abrvs)
;;     (puthash "supe" "⊇" sci-abrvs)
;;     (puthash "oplus" "⊕" sci-abrvs)
;;     (puthash "otimes" "⊗" sci-abrvs)
;;     (puthash "perp" "⊥" sci-abrvs)
;;     (puthash "sdot" "⋅" sci-abrvs)
;;     (puthash "lceil" "⌈" sci-abrvs)
;;     (puthash "rceil" "⌉" sci-abrvs)
;;     (puthash "lfloor" "⌊" sci-abrvs)
;;     (puthash "rfloor" "⌋" sci-abrvs)
;;     (puthash "lang" "〈" sci-abrvs)
;;     (puthash "rang" "〉" sci-abrvs)
;;     (puthash "loz" "◊" sci-abrvs)
;;     (puthash "spades" "♠" sci-abrvs)
;;     (puthash "clubs" "♣" sci-abrvs)
;;     (puthash "hearts" "♥" sci-abrvs)
;;     (puthash "diams" "♦" sci-abrvs)
;;     )

;;   ;; Double struck letter forms (aka Double struck; double stroke)
;;   ;; others outside of the BMP (Unicode's Basic Multilingual Plane). Not much font supports it.
;;   (puthash "dsC" "ℂ" sci-abrvs)
;;   (puthash "dsH" "ℍ" sci-abrvs)
;;   (puthash "dsN" "ℕ" sci-abrvs)
;;   (puthash "dsP" "ℙ" sci-abrvs)
;;   (puthash "dsQ" "ℚ" sci-abrvs)
;;   (puthash "dsR" "ℝ" sci-abrvs)
;;   (puthash "dsZ" "ℤ" sci-abrvs)

;;   (puthash "dd" "ⅆ" sci-abrvs)
;;   (puthash "ee" "ⅇ" sci-abrvs)
;;   (puthash "ii" "ⅈ" sci-abrvs)
;;   (puthash "jj" "ⅉ" sci-abrvs)

;;   (puthash "dsd" "ⅆ" sci-abrvs)
;;   (puthash "dse" "ⅇ" sci-abrvs)
;;   (puthash "dsi" "ⅈ" sci-abrvs)
;;   (puthash "dsj" "ⅉ" sci-abrvs)

;;   ;; gothic letter forms (aka FRANKTUR). Most are outside BMP
;;   (puthash "goA" "𝔄" sci-abrvs)
;;   (puthash "goB" "𝔅" sci-abrvs)
;;   (puthash "goC" "ℭ" sci-abrvs)
;;   (puthash "goD" "𝔇" sci-abrvs)
;;   (puthash "goE" "𝔈" sci-abrvs)
;;   (puthash "goF" "𝔉" sci-abrvs)
;;   (puthash "goG" "𝔊" sci-abrvs)
;;   (puthash "goH" "ℌ" sci-abrvs)
;;   (puthash "goI" "ℑ" sci-abrvs)
;;   (puthash "goJ" "𝔍" sci-abrvs)
;;   (puthash "goK" "𝔎" sci-abrvs)
;;   (puthash "goL" "𝔏" sci-abrvs)
;;   (puthash "goM" "𝔐" sci-abrvs)
;;   (puthash "goN" "𝔑" sci-abrvs)
;;   (puthash "goO" "𝔒" sci-abrvs)
;;   (puthash "goP" "𝔓" sci-abrvs)
;;   (puthash "goQ" "𝔔" sci-abrvs)
;;   (puthash "goR" "ℜ" sci-abrvs)
;;   (puthash "goS" "𝔖" sci-abrvs)
;;   (puthash "goT" "𝔗" sci-abrvs)
;;   (puthash "goU" "𝔘" sci-abrvs)
;;   (puthash "goV" "𝔙" sci-abrvs)
;;   (puthash "goW" "𝔚" sci-abrvs)
;;   (puthash "goX" "𝔛" sci-abrvs)
;;   (puthash "goY" "𝔜" sci-abrvs)
;;   (puthash "goZ" "ℨ" sci-abrvs)
;;   (puthash "goa" "𝔞" sci-abrvs)
;;   (puthash "gob" "𝔟" sci-abrvs)
;;   (puthash "goc" "𝔠" sci-abrvs)
;;   (puthash "god" "𝔡" sci-abrvs)
;;   (puthash "goe" "𝔢" sci-abrvs)
;;   (puthash "gof" "𝔣" sci-abrvs)
;;   (puthash "gog" "𝔤" sci-abrvs)
;;   (puthash "goh" "𝔥" sci-abrvs)
;;   (puthash "goi" "𝔦" sci-abrvs)
;;   (puthash "goj" "𝔧" sci-abrvs)
;;   (puthash "gok" "𝔨" sci-abrvs)
;;   (puthash "gol" "𝔩" sci-abrvs)
;;   (puthash "gom" "𝔪" sci-abrvs)
;;   (puthash "gon" "𝔫" sci-abrvs)
;;   (puthash "goo" "𝔬" sci-abrvs)
;;   (puthash "gop" "𝔭" sci-abrvs)
;;   (puthash "goq" "𝔮" sci-abrvs)
;;   (puthash "gor" "𝔯" sci-abrvs)
;;   (puthash "gos" "𝔰" sci-abrvs)
;;   (puthash "got" "𝔱" sci-abrvs)
;;   (puthash "gou" "𝔲" sci-abrvs)
;;   (puthash "gov" "𝔳" sci-abrvs)
;;   (puthash "gow" "𝔴" sci-abrvs)
;;   (puthash "gox" "𝔵" sci-abrvs)
;;   (puthash "goy" "𝔶" sci-abrvs)
;;   (puthash "goz" "𝔷" sci-abrvs)

;;   ;; Scripted letter forms. Most are outside BMP.
;;   (puthash "sca" "𝒶" sci-abrvs)
;;   (puthash "scb" "𝒷" sci-abrvs)
;;   (puthash "scc" "𝒸" sci-abrvs)
;;   (puthash "scd" "𝒹" sci-abrvs)
;;   (puthash "sce" "ℯ" sci-abrvs) ; in BMP
;;   (puthash "scf" "𝒻" sci-abrvs)
;;   (puthash "scg" "ℊ" sci-abrvs) ; in BMP
;;   (puthash "sch" "𝒽" sci-abrvs)
;;   (puthash "sci" "𝒾" sci-abrvs)
;;   (puthash "scj" "𝒿" sci-abrvs)
;;   (puthash "sck" "𝓀" sci-abrvs)
;;   (puthash "scl2" "𝓁" sci-abrvs)
;;   (puthash "scl" "ℓ" sci-abrvs) ;in BMP
;;   (puthash "scm" "𝓂" sci-abrvs)
;;   (puthash "scn" "𝓃" sci-abrvs)
;;   (puthash "sco" "ℴ" sci-abrvs) ; in BMP
;;   (puthash "scp" "𝓅" sci-abrvs)
;;   (puthash "scq" "𝓆" sci-abrvs)
;;   (puthash "scw" "𝓌" sci-abrvs)
;;   (puthash "scx" "𝓍" sci-abrvs)
;;   (puthash "scy" "𝓎" sci-abrvs)
;;   (puthash "scz" "𝓏" sci-abrvs)

;;   (puthash "scB" "ℬ" sci-abrvs)
;;   (puthash "scE" "ℰ" sci-abrvs)
;;   (puthash "scF" "ℱ" sci-abrvs)
;;   (puthash "scH" "ℋ" sci-abrvs)
;;   (puthash "scI" "ℐ" sci-abrvs)
;;   (puthash "scL" "ℒ" sci-abrvs)
;;   (puthash "scM" "ℳ" sci-abrvs)
;;   (puthash "scP" "℘" sci-abrvs)
;;   (puthash "scR" "ℛ" sci-abrvs)

;;  ;; a b c d e f g h i j k l m n o p q w x y z
;;  ;; A B C D E F G H I J K L M N O P Q W X Y Z

;;   ;; accented letters
;;   (puthash "a`" "à" sci-abrvs)
;;   (puthash "e`" "è" sci-abrvs)
;;   (puthash "i`" "ì" sci-abrvs)
;;   (puthash "o`" "ò" sci-abrvs)
;;   (puthash "u`" "ù" sci-abrvs)
;;   (puthash "A`" "À" sci-abrvs)
;;   (puthash "E`" "È" sci-abrvs)
;;   (puthash "I`" "Ì" sci-abrvs)
;;   (puthash "O`" "Ò" sci-abrvs)
;;   (puthash "U`" "Ù" sci-abrvs)

;;   (puthash "a^" "â" sci-abrvs)
;;   (puthash "e^" "ê" sci-abrvs)
;;   (puthash "i^" "î" sci-abrvs)
;;   (puthash "o^" "ô" sci-abrvs)
;;   (puthash "u^" "û" sci-abrvs)
;;   (puthash "A^" "Â" sci-abrvs)
;;   (puthash "E^" "Ê" sci-abrvs)
;;   (puthash "I^" "Î" sci-abrvs)
;;   (puthash "O^" "Ô" sci-abrvs)
;;   (puthash "U^" "Û" sci-abrvs)

;;   (puthash "a'" "á" sci-abrvs)
;;   (puthash "e'" "é" sci-abrvs)
;;   (puthash "i'" "í" sci-abrvs)
;;   (puthash "o'" "ó" sci-abrvs)
;;   (puthash "u'" "ú" sci-abrvs)
;;   (puthash "y'" "ý" sci-abrvs)
;;   (puthash "A'" "Á" sci-abrvs)
;;   (puthash "E'" "É" sci-abrvs)
;;   (puthash "I'" "Í" sci-abrvs)
;;   (puthash "O'" "Ó" sci-abrvs)
;;   (puthash "U'" "Ú" sci-abrvs)
;;   (puthash "Y'" "Ý" sci-abrvs)

;;   (puthash "A\"" "Ä" sci-abrvs)
;;   (puthash "E\"" "Ë" sci-abrvs)
;;   (puthash "I\"" "Ï" sci-abrvs)
;;   (puthash "O\"" "Ö" sci-abrvs)
;;   (puthash "U\"" "Ü" sci-abrvs)
;;   (puthash "a\"" "ä" sci-abrvs)
;;   (puthash "e\"" "ë" sci-abrvs)
;;   (puthash "i\"" "ï" sci-abrvs)
;;   (puthash "o\"" "ö" sci-abrvs)
;;   (puthash "u\"" "ü" sci-abrvs)
;;   (puthash "s\"" "ß" sci-abrvs)
;;   (puthash "y\"" "ÿ" sci-abrvs)

;;   (puthash "Ao" "Å" sci-abrvs)
;;   (puthash "ao" "å" sci-abrvs)

;;   (puthash "AE" "Æ" sci-abrvs)
;;   (puthash "ae" "æ" sci-abrvs)

;;   (puthash "a~" "ã" sci-abrvs)
;;   (puthash "n~" "ñ" sci-abrvs)
;;   (puthash "o~" "õ" sci-abrvs)
;;   (puthash "A~" "Ã" sci-abrvs)
;;   (puthash "N~" "Ñ" sci-abrvs)
;;   (puthash "O~" "Õ" sci-abrvs)

;;   ;; misc non-math symbols
;;   (puthash "tm" "™" sci-abrvs)
;;   (puthash "3/4" "¾" sci-abrvs)
;;   (puthash "1/2" "½" sci-abrvs)
;;   (puthash "1/4" "¼" sci-abrvs)
;;   (puthash "..." "…" sci-abrvs)
;;   (puthash "dag" "†" sci-abrvs)
;;   (puthash "ddag" "‡" sci-abrvs)
;;   (puthash "--" "—" sci-abrvs)
;;   (puthash "-" "−" sci-abrvs)
;;   (puthash "s&" "﹠" sci-abrvs)
;;   (puthash "?!" "⁈" sci-abrvs)
;;   (puthash "!?" "⁉" sci-abrvs)
;;   (puthash "!!" "‼" sci-abrvs)

;;   (puthash "ltrib" "◀" sci-abrvs)
;;   (puthash "rtrib" "▶" sci-abrvs)
;;   (puthash "trib" "▲" sci-abrvs)
;;   (puthash "dtrib" "▼" sci-abrvs)
;;   (puthash "ltri" "◁" sci-abrvs)
;;   (puthash "rtri" "▷" sci-abrvs)
;;   (puthash "tri" "△" sci-abrvs)
;;   (puthash "dtri" "▽" sci-abrvs)
;;   (puthash "sq" "□" sci-abrvs)
;;   (puthash "cir" "○" sci-abrvs)
;;   (puthash "dia" "◇" sci-abrvs)
;;   (puthash "sqb" "■" sci-abrvs)
;;   (puthash "cirb" "●" sci-abrvs)
;;   (puthash "diab" "◆" sci-abrvs)
;;   (puthash "<3" "♥" sci-abrvs)

;;   (puthash ":)" "☺" sci-abrvs)
;;   (puthash ":(" "☹" sci-abrvs)

;;   ;; computer keys and symbols
;;   (puthash "cmd" "⌘" sci-abrvs)
;;   (puthash "opt" "⌥" sci-abrvs)
;;   (puthash "caret" "‸" sci-abrvs)
;;   (puthash "pgup" "⇞"sci-abrvs)
;;   (puthash "pgdn" "⇟"sci-abrvs)
;;   (puthash "nwarr" "↖"sci-abrvs)
;;   (puthash "searr" "↘"sci-abrvs)
;;   (puthash "power" "⎋"sci-abrvs)
;;   (puthash "eject" "⏏"sci-abrvs)
;;   (puthash "undo" "↶"sci-abrvs)
;;   (puthash "redo" "↷"sci-abrvs)
;;   (puthash "shift" "⇧"sci-abrvs)

;;   (puthash "enter" "⌤"sci-abrvs)
;;   (puthash "return3" "↵"sci-abrvs)
;;   (puthash "return2" "↩"sci-abrvs)
;;   (puthash "return" "⏎"sci-abrvs)

;;   (puthash "dell" "⌫"sci-abrvs)
;;   (puthash "delr" "⌦"sci-abrvs)
;;   (puthash "kbd" "⌨"sci-abrvs)
;;   (puthash "_" "␣"sci-abrvs)

;;   (puthash "lrarr" "⇄"sci-abrvs)

;;   (puthash "|<-" "⇤"sci-abrvs)
;;   (puthash "->|" "⇥"sci-abrvs)

;;   (puthash "tabl" "⇤"sci-abrvs)
;;   (puthash "tabr" "⇥"sci-abrvs)
;;   (puthash "tab" "↹"sci-abrvs)
;;   (puthash "clear" "⌧"sci-abrvs)
;;   (puthash "ibeam" "⌶"sci-abrvs)
;;   (puthash "prevpage" "⎗"sci-abrvs)
;;   (puthash "nextpage" "⎘"sci-abrvs)
;;   (puthash "print" "⎙"sci-abrvs)
;;   (puthash "watch" "⌚"sci-abrvs)
;;   (puthash "hourglass" "⌛"sci-abrvs)
;;   (puthash "scissor" "✂"sci-abrvs)
;;   (puthash "scissorw" "✄"sci-abrvs)
;;   (puthash "envelope" "✉"sci-abrvs)
;;   (puthash "writing" "✍"sci-abrvs)

;;   ;; misc math
;;   (puthash "+-" "±" sci-abrvs)
;;   (puthash "-+" "∓" sci-abrvs)

;;   ;; superscripts
;;   (puthash "^0" "⁰" sci-abrvs)
;;   (puthash "^1" "¹" sci-abrvs)
;;   (puthash "^2" "²" sci-abrvs)
;;   (puthash "^3" "³" sci-abrvs)
;;   (puthash "^4" "⁴" sci-abrvs)
;;   (puthash "^5" "⁵" sci-abrvs)
;;   (puthash "^6" "⁶" sci-abrvs)
;;   (puthash "^7" "⁷" sci-abrvs)
;;   (puthash "^8" "⁸" sci-abrvs)
;;   (puthash "^9" "⁹" sci-abrvs)
;;   (puthash "^+" "⁺" sci-abrvs)
;;   (puthash "^-" "⁻" sci-abrvs)
;;   (puthash "^=" "⁼" sci-abrvs)
;;   (puthash "^(" "⁽" sci-abrvs)
;;   (puthash "^)" "⁾" sci-abrvs)
;;   (puthash "^n" "ⁿ" sci-abrvs)
;;   (puthash "^i" "ⁱ" sci-abrvs)

;;   ;; subscripts
;;   (puthash "_(" "₍" sci-abrvs)
;;   (puthash "_)" "₎" sci-abrvs)
;;   (puthash "_+" "₊" sci-abrvs)
;;   (puthash "_-" "₋" sci-abrvs)
;;   (puthash "_0" "₀" sci-abrvs)
;;   (puthash "_1" "₁" sci-abrvs)
;;   (puthash "_2" "₂" sci-abrvs)
;;   (puthash "_3" "₃" sci-abrvs)
;;   (puthash "_4" "₄" sci-abrvs)
;;   (puthash "_5" "₅" sci-abrvs)
;;   (puthash "_6" "₆" sci-abrvs)
;;   (puthash "_7" "₇" sci-abrvs)
;;   (puthash "_8" "₈" sci-abrvs)
;;   (puthash "_9" "₉" sci-abrvs)
;;   (puthash "_=" "₌" sci-abrvs)
;;   (puthash "_a" "ₐ" sci-abrvs)
;;   (puthash "_e" "ₑ" sci-abrvs)

;;   (puthash "_h" "ₕ" sci-abrvs)
;;   (puthash "_i" "ᵢ" sci-abrvs)
;;   (puthash "_j" "ⱼ" sci-abrvs)
;;   (puthash "_k" "ₖ" sci-abrvs)
;;   (puthash "_l" "ₗ" sci-abrvs)
;;   (puthash "_m" "ₘ" sci-abrvs)
;;   (puthash "_n" "ₙ" sci-abrvs)
;;   (puthash "_o" "ₒ" sci-abrvs)
;;   (puthash "_p" "ₚ" sci-abrvs)
;;   (puthash "_r" "ᵣ" sci-abrvs)
;;   (puthash "_s" "ₛ" sci-abrvs)
;;   (puthash "_t" "ₜ" sci-abrvs)
;;   (puthash "_u" "ᵤ" sci-abrvs)
;;   (puthash "_v" "ᵥ" sci-abrvs)
;;   (puthash "_x" "ₓ" sci-abrvs)
;;   (puthash "_schwa" "ₔ" sci-abrvs)

;;   ;; astronomy
;;   (puthash "sun" "☉" sci-abrvs)
;;   (puthash "sunray" "☼" sci-abrvs)
;;   (puthash "moon" "☾" sci-abrvs)
;;   (puthash "moonr" "☽" sci-abrvs)
;;   (puthash "mercury" "☿" sci-abrvs)
;;   (puthash "earth" "♁" sci-abrvs)
;;   (puthash "saturn" "♄" sci-abrvs)
;;   (puthash "uranus" "♅" sci-abrvs)
;;   (puthash "neptune" "♆" sci-abrvs)
;;   (puthash "pluto" "♇" sci-abrvs)
;;   (puthash "jupiter" "♃" sci-abrvs)
;;   (puthash "male" "♂" sci-abrvs)
;;   (puthash "mars" "♂" sci-abrvs)
;;   (puthash "female" "♀" sci-abrvs)
;;   (puthash "venus" "♀" sci-abrvs)
;;   (puthash "comet" "☄" sci-abrvs)

;;   ;; forms for constants-like things
;;   (puthash "inf" "∞" sci-abrvs)
;;   (puthash "O/" "∅" sci-abrvs)
;;   (puthash "o/" "Ø" sci-abrvs)
;;   (puthash "es" "Ø" sci-abrvs)

;;   ;; brackets, matching pairs
;;   (puthash "flr" "⌊⌋" sci-abrvs)
;;   (puthash "ceil" "⌈⌉" sci-abrvs)
;;   (puthash "\"" "“”" sci-abrvs)
;;   (puthash "[" "「」" sci-abrvs)
;;   (puthash "[[" "『』" sci-abrvs)
;;   (puthash "[2" "【】" sci-abrvs)
;;   (puthash "[3" "〖〗" sci-abrvs)
;;   (puthash "(" "〔〕" sci-abrvs)
;;   (puthash "<" "〈〉" sci-abrvs)
;;   (puthash "<<" "《》" sci-abrvs)
;;   (puthash "<2" "‹›" sci-abrvs)
;;   (puthash "<<2" "«»" sci-abrvs)

;;   ;; number forms
;;   (puthash "c1" "①" sci-abrvs)
;;   (puthash "c2" "②" sci-abrvs)
;;   (puthash "c3" "③" sci-abrvs)
;;   (puthash "c4" "④" sci-abrvs)
;;   (puthash "c5" "⑤" sci-abrvs)
;;   (puthash "c6" "⑥" sci-abrvs)
;;   (puthash "c7" "⑦" sci-abrvs)
;;   (puthash "c8" "⑧" sci-abrvs)
;;   (puthash "c9" "⑨" sci-abrvs)
;;   (puthash "c0" "⓪" sci-abrvs)

;; (puthash "1." "⒈" sci-abrvs)
;; (puthash "2." "⒉" sci-abrvs)
;; (puthash "3." "⒊" sci-abrvs)
;; (puthash "4." "⒋" sci-abrvs)
;; (puthash "5." "⒌" sci-abrvs)
;; (puthash "6." "⒍" sci-abrvs)
;; (puthash "7." "⒎" sci-abrvs)
;; (puthash "8." "⒏" sci-abrvs)
;; (puthash "9." "⒐" sci-abrvs)
;; (puthash "0." "🄀" sci-abrvs)

;; (puthash "1," "🄂" sci-abrvs)
;; (puthash "2," "🄃" sci-abrvs)
;; (puthash "3," "🄄" sci-abrvs)
;; (puthash "4," "🄅" sci-abrvs)
;; (puthash "5," "🄆" sci-abrvs)
;; (puthash "6," "🄇" sci-abrvs)
;; (puthash "7," "🄈" sci-abrvs)
;; (puthash "8," "🄉" sci-abrvs)
;; (puthash "9," "🄊" sci-abrvs)
;; (puthash "0," "🄁" sci-abrvs)

;;   ;; music
;; (puthash "notes4" "♩" sci-abrvs)
;; (puthash "notes8" "♪" sci-abrvs)
;; (puthash "notes8d" "♫" sci-abrvs)
;; (puthash "notes16d" "♬" sci-abrvs)
;; (puthash "flat" "♭" sci-abrvs)
;; (puthash "natural" "♮" sci-abrvs)
;; (puthash "sharp" "♯" sci-abrvs)

;;   ;; letters
;;   ;; greek alphabets http://en.wikipedia.org/wiki/Greek_alphabet
;;   ;; ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ
;;   ;; αβγδεζηθικλμνξοπρστυφχψω
;;   ;;                  ς
;;   (puthash "a" "α" sci-abrvs)
;;   (puthash "b" "β" sci-abrvs)
;;   (puthash "g" "γ" sci-abrvs)
;;   (puthash "d" "δ" sci-abrvs)
;;   (puthash "e" "ε" sci-abrvs)
;;   (puthash "z" "ζ" sci-abrvs)
;;   (puthash "h" "η" sci-abrvs)
;;   (puthash "q" "θ" sci-abrvs)
;;   (puthash "i" "ι" sci-abrvs)
;;   (puthash "k" "κ" sci-abrvs)
;;   (puthash "l" "λ" sci-abrvs)
;;   (puthash "m" "μ" sci-abrvs)
;;   (puthash "n" "ν" sci-abrvs)
;;   (puthash "x" "ξ" sci-abrvs)
;;   ;; (puthash "a" "ο" sci-abrvs)
;;   (puthash "p" "π" sci-abrvs)
;;   (puthash "r" "ρ" sci-abrvs)
;;   (puthash "s" "σ" sci-abrvs)
;;   (puthash "t" "τ" sci-abrvs)
;;   (puthash "v" "υ" sci-abrvs)
;;   (puthash "f" "φ" sci-abrvs)
;;   (puthash "c" "χ" sci-abrvs)
;;   (puthash "y" "ψ" sci-abrvs)
;;   (puthash "o" "ω" sci-abrvs)

;;   (puthash "A" "Α" sci-abrvs)
;;   (puthash "B" "Β" sci-abrvs)
;;   (puthash "G" "Γ" sci-abrvs)
;;   (puthash "D" "Δ" sci-abrvs)
;;   (puthash "E" "Ε" sci-abrvs)
;;   (puthash "Z" "Ζ" sci-abrvs)
;;   (puthash "h" "Η" sci-abrvs)
;;   (puthash "Q" "Θ" sci-abrvs)
;;   (puthash "I" "Ι" sci-abrvs)
;;   (puthash "K" "Κ" sci-abrvs)
;;   (puthash "L" "Λ" sci-abrvs)
;;   (puthash "M" "Μ" sci-abrvs)
;;   (puthash "N" "Ν" sci-abrvs)
;;   (puthash "X" "Ξ" sci-abrvs)
;;   ;; (Puthash "A" "Ο" sci-abrvs)
;;   (puthash "P" "Π" sci-abrvs)
;;   (puthash "R" "Ρ" sci-abrvs)
;;   (puthash "S" "Σ" sci-abrvs)
;;   (puthash "T" "Τ" sci-abrvs)
;;   (puthash "V" "Υ" sci-abrvs)
;;   (puthash "F" "Φ" sci-abrvs)
;;   (puthash "C" "Χ" sci-abrvs)
;;   (puthash "Y" "Ψ" sci-abrvs)
;;   (puthash "O" "Ω" sci-abrvs)

;;   ;; letter-like forms
;;   (puthash "al" "ℵ" sci-abrvs)
;;   (puthash "alef" "ℵ" sci-abrvs)
;;   (puthash "aleph" "ℵ" sci-abrvs)
;;   (puthash "beth" "ב" sci-abrvs)
;;   (puthash "gimel" "ג" sci-abrvs)
;;   (puthash "dalet" "ד" sci-abrvs)
;;   (puthash "daleth" "ד" sci-abrvs)
;;   (puthash "Digamma" "Ϝ" sci-abrvs)
;;   (puthash "digamma" "ϝ" sci-abrvs)
;;   (puthash "wp" "℘" sci-abrvs)
;;   (puthash "angstrom" "Å" sci-abrvs)
;;   (puthash "R2" "ℝ²" sci-abrvs)
;;   (puthash "R3" "ℝ³" sci-abrvs)
;;   (puthash "fun" "ƒ" sci-abrvs)

;;   ;; relations
;;   (puthash "<=" "≤" sci-abrvs)
;;   (puthash ">=" "≥" sci-abrvs)
;;   (puthash "!el" "∉" sci-abrvs)
;;   (puthash "el" "∈" sci-abrvs)
;;   (puthash "&&" "∧" sci-abrvs)
;;   (puthash "||" "∨" sci-abrvs)
;;   (puthash "not" "¬" sci-abrvs) ; not
;;   (puthash "===" "≡" sci-abrvs) ; equivalent

;;   (puthash "~" "≈" sci-abrvs) ; ALMOST EQUAL TO
;;   (puthash ":=" "≔" sci-abrvs) ; define
;;   (puthash "=:" "≕" sci-abrvs) ; define
;;   (puthash "!=" "≠" sci-abrvs) (puthash "notequal" "≠" sci-abrvs) ; not equal
;;   (puthash "fa" "∀" sci-abrvs) (puthash "forall" "∀" sci-abrvs) ; FOR ALL
;;   (puthash "ex" "∃" sci-abrvs) ; THERE EXISTS

;;   ;; operators
;;   (puthash "c+" "⊕" sci-abrvs)
;;   (puthash "c*" "⊗" sci-abrvs)
;;   (puthash "*" "×" sci-abrvs)
;;   (puthash "'" "′" sci-abrvs)
;;   (puthash "''" "″" sci-abrvs)
;;   (puthash "'''" "‴" sci-abrvs)
;;   (puthash "." "·" sci-abrvs)
;;   (puthash "root" "√" sci-abrvs)
;;   (puthash "sqrt" "√" sci-abrvs)
;;   (puthash "rt" "√" sci-abrvs)
;;   (puthash "del" "∇" sci-abrvs)
;;   (puthash "part" "∂" sci-abrvs)
;;   (puthash "partial" "∂" sci-abrvs)
;;   (puthash "pd" "∂" sci-abrvs)
;;   (puthash "cross" "⨯" sci-abrvs)
;;   (puthash "cint" "∮" sci-abrvs) ; contour integral
;;   (puthash "ccint" "∲" sci-abrvs)
;;   (puthash "cccint" "∳" sci-abrvs)
;;   (puthash "union" "∩" sci-abrvs)
;;   (puthash "intersection" "∪" sci-abrvs)

;;   (puthash "/_" "∠" sci-abrvs)
;;   (puthash "rightangle" "⦜" sci-abrvs)
;;   (puthash "|_" "⦜" sci-abrvs)
;;   (puthash "measuredangle" "∡" sci-abrvs)
;;   (puthash "sphericalangle" "∢" sci-abrvs)

;;   (puthash "intersection" "∪" sci-abrvs)
;;   (puthash "intersection" "∪" sci-abrvs)

;;   ;; arrows and maps
;;   (puthash "<-" "←" sci-abrvs)
;;   (puthash "->" "→" sci-abrvs)
;;   (puthash "<->" "↔" sci-abrvs)
;;   (puthash "!<-" "↚" sci-abrvs)
;;   (puthash "!->" "↛" sci-abrvs)
;;   (puthash "!<->" "↮" sci-abrvs)

;; (puthash "<=2" "⇐" sci-abrvs)
;; (puthash "=>" "⇒" sci-abrvs)
;; (puthash "<=>" "⇔" sci-abrvs)
;; (puthash "!<=" "⇍" sci-abrvs)
;; (puthash "!=>" "⇏" sci-abrvs)
;; (puthash "!=>" "⇎" sci-abrvs)

;; (puthash "<==" "⟸" sci-abrvs)
;; (puthash "==>" "⟹" sci-abrvs)
;; (puthash "<==>" "⟺" sci-abrvs)

;;   (puthash "<-|" "↤" sci-abrvs)
;;   (puthash "|->" "↦" sci-abrvs)

;;   (puthash "<--" "⟵" sci-abrvs)
;;   (puthash "-->" "⟶" sci-abrvs)
;;   (puthash "<-->" "⟷" sci-abrvs)

;;   (puthash "xor" "⊻" sci-abrvs)
;;   (puthash "nand" "⊼" sci-abrvs)
;;   (puthash "nor" "⊽" sci-abrvs)

;;   ;; some of the following are duplicates using full words as abbrev
;;   (puthash "m-" "—" sci-abrvs)
;;   (puthash "f-" "‒" sci-abrvs)
;;   (puthash "n-" "–" sci-abrvs)

;; (puthash "delete" "⌫"sci-abrvs)
;; (puthash "square" "■" sci-abrvs)
;; (puthash "square2" "□" sci-abrvs)
;; (puthash "circle" "●" sci-abrvs)
;; (puthash "circle2" "○" sci-abrvs)
;; (puthash "triangle" "▲" sci-abrvs)
;; (puthash "triangle2" "△" sci-abrvs)
;; (puthash "diamond" "◆" sci-abrvs)
;; (puthash "diamond2" "◇" sci-abrvs)
;; (puthash "star" "★" sci-abrvs)
;; (puthash "star2" "☆" sci-abrvs)
;; (puthash "spade" "♠" sci-abrvs)
;; (puthash "spade2" "♤" sci-abrvs)
;; (puthash "club" "♣" sci-abrvs)
;; (puthash "club2" "♧" sci-abrvs)
;; (puthash "heart" "♥" sci-abrvs)
;; (puthash "heart2" "♡" sci-abrvs)
;; (puthash "diam" "♦" sci-abrvs)
;; (puthash "diam2" "♢" sci-abrvs)

;; (puthash "fw," "，" sci-abrvs)
;; (puthash "fw." "．" sci-abrvs)
;; (puthash "fw:" "：" sci-abrvs)
;; (puthash "fw;" "；" sci-abrvs)
;; (puthash "fw!" "！" sci-abrvs)
;; (puthash "fw?" "？" sci-abrvs)
;; (puthash "fw`" "｀" sci-abrvs)
;; (puthash "fw'" "＇" sci-abrvs)
;; (puthash "fw\"" "＂" sci-abrvs)
;; (puthash "fw&" "＆" sci-abrvs)

;; (puthash "fw(" "（" sci-abrvs)
;; (puthash "fw)" "）" sci-abrvs)
;; (puthash "fw[" "［" sci-abrvs)
;; (puthash "fw]" "］" sci-abrvs)
;; (puthash "fw{" "｛" sci-abrvs)
;; (puthash "fw}" "｝" sci-abrvs)

;; (puthash "fw@" "＠" sci-abrvs)
;; (puthash "fw^" "＾" sci-abrvs) ; CIRCUMFLEX ACCENT
;; (puthash "fw`" "｀" sci-abrvs) ; GRAVE ACCENT
;; (puthash "fw~" "～" sci-abrvs)
;; (puthash "fw_" "＿" sci-abrvs)
;; (puthash "fw¯" "￣" sci-abrvs) ; MACRON

;; (puthash "fw#" "＃" sci-abrvs)
;; (puthash "fw+" "＋" sci-abrvs)
;; (puthash "fw-" "－" sci-abrvs)
;; (puthash "fw*" "＊" sci-abrvs)
;; (puthash "fw=" "＝" sci-abrvs)
;; (puthash "fw<" "＜" sci-abrvs)
;; (puthash "fw>" "＞" sci-abrvs)
;; (puthash "fw%" "％" sci-abrvs)

;; (puthash "fw|" "｜" sci-abrvs)
;; (puthash "fw¦" "￤" sci-abrvs)
;; (puthash "fw/" "／" sci-abrvs)
;; (puthash "fw\\" "＼" sci-abrvs)
;; (puthash "fw¬" "￢" sci-abrvs)

;; (puthash "fw((" "｟" sci-abrvs)
;; (puthash "fw))" "｠" sci-abrvs)

;; (puthash "fw$" "＄" sci-abrvs)
;; (puthash "fw£" "￡" sci-abrvs)
;; (puthash "fw¢" "￠" sci-abrvs)
;; (puthash "fw₩" "￦" sci-abrvs) ; WON SIGN
;; (puthash "fw¥" "￥" sci-abrvs) ; YEN SIGN

;; (puthash "fw0" "０" sci-abrvs)
;; (puthash "fw1" "１" sci-abrvs)
;; (puthash "fw2" "２" sci-abrvs)
;; (puthash "fw3" "３" sci-abrvs)
;; (puthash "fw4" "４" sci-abrvs)
;; (puthash "fw5" "５" sci-abrvs)
;; (puthash "fw6" "６" sci-abrvs)
;; (puthash "fw7" "７" sci-abrvs)
;; (puthash "fw8" "８" sci-abrvs)
;; (puthash "fw9" "９" sci-abrvs)

;; (puthash "fwA" "Ａ" sci-abrvs)
;; (puthash "fwB" "Ｂ" sci-abrvs)
;; (puthash "fwC" "Ｃ" sci-abrvs)
;; (puthash "fwD" "Ｄ" sci-abrvs)
;; (puthash "fwE" "Ｅ" sci-abrvs)
;; (puthash "fwF" "Ｆ" sci-abrvs)
;; (puthash "fwG" "Ｇ" sci-abrvs)
;; (puthash "fwH" "Ｈ" sci-abrvs)
;; (puthash "fwI" "Ｉ" sci-abrvs)
;; (puthash "fwJ" "Ｊ" sci-abrvs)
;; (puthash "fwK" "Ｋ" sci-abrvs)
;; (puthash "fwL" "Ｌ" sci-abrvs)
;; (puthash "fwM" "Ｍ" sci-abrvs)
;; (puthash "fwN" "Ｎ" sci-abrvs)
;; (puthash "fwO" "Ｏ" sci-abrvs)
;; (puthash "fwP" "Ｐ" sci-abrvs)
;; (puthash "fwQ" "Ｑ" sci-abrvs)
;; (puthash "fwR" "Ｒ" sci-abrvs)
;; (puthash "fwS" "Ｓ" sci-abrvs)
;; (puthash "fwT" "Ｔ" sci-abrvs)
;; (puthash "fwU" "Ｕ" sci-abrvs)
;; (puthash "fwV" "Ｖ" sci-abrvs)
;; (puthash "fwW" "Ｗ" sci-abrvs)
;; (puthash "fwX" "Ｘ" sci-abrvs)
;; (puthash "fwY" "Ｙ" sci-abrvs)
;; (puthash "fwZ" "Ｚ" sci-abrvs)
;; (puthash "fwa" "ａ" sci-abrvs)
;; (puthash "fwb" "ｂ" sci-abrvs)
;; (puthash "fwc" "ｃ" sci-abrvs)
;; (puthash "fwd" "ｄ" sci-abrvs)
;; (puthash "fwe" "ｅ" sci-abrvs)
;; (puthash "fwf" "ｆ" sci-abrvs)
;; (puthash "fwg" "ｇ" sci-abrvs)
;; (puthash "fwh" "ｈ" sci-abrvs)
;; (puthash "fwi" "ｉ" sci-abrvs)
;; (puthash "fwj" "ｊ" sci-abrvs)
;; (puthash "fwk" "ｋ" sci-abrvs)
;; (puthash "fwl" "ｌ" sci-abrvs)
;; (puthash "fwm" "ｍ" sci-abrvs)
;; (puthash "fwn" "ｎ" sci-abrvs)
;; (puthash "fwo" "ｏ" sci-abrvs)
;; (puthash "fwp" "ｐ" sci-abrvs)
;; (puthash "fwq" "ｑ" sci-abrvs)
;; (puthash "fwr" "ｒ" sci-abrvs)
;; (puthash "fws" "ｓ" sci-abrvs)
;; (puthash "fwt" "ｔ" sci-abrvs)
;; (puthash "fwu" "ｕ" sci-abrvs)
;; (puthash "fwv" "ｖ" sci-abrvs)
;; (puthash "fww" "ｗ" sci-abrvs)
;; (puthash "fwx" "ｘ" sci-abrvs)
;; (puthash "fwy" "ｙ" sci-abrvs)
;; (puthash "fwz" "ｚ" sci-abrvs)

;;   ;; 2010-12-10. char to add
;;   ;; soft hyphen ­
;;   ;; ↥ ↧ ⇤ ⇥ ⤒ ⤓ ↨

;;   )

(defvar sci-abrvs nil "A abbreviation hash table that maps a string to unicode char.")

(defun bidirectional-puthash (a b c)
  (puthash a b c)
  (puthash b a c))

(progn
  ;; my adapted version
  (setq sci-abrvs (make-hash-table :test 'equal))

  (progn ;;NUMBER : c[0-9] | [0-9][,.]
    (bidirectional-puthash "c1" "①" sci-abrvs)
    (bidirectional-puthash "c2" "②" sci-abrvs)
    (bidirectional-puthash "c3" "③" sci-abrvs)
    (bidirectional-puthash "c4" "④" sci-abrvs)
    (bidirectional-puthash "c5" "⑤" sci-abrvs)
    (bidirectional-puthash "c6" "⑥" sci-abrvs)
    (bidirectional-puthash "c7" "⑦" sci-abrvs)
    (bidirectional-puthash "c8" "⑧" sci-abrvs)
    (bidirectional-puthash "c9" "⑨" sci-abrvs)
    (bidirectional-puthash "c0" "⓪" sci-abrvs)
    (bidirectional-puthash "1." "⒈" sci-abrvs)
    (bidirectional-puthash "2." "⒉" sci-abrvs)
    (bidirectional-puthash "3." "⒊" sci-abrvs)
    (bidirectional-puthash "4." "⒋" sci-abrvs)
    (bidirectional-puthash "5." "⒌" sci-abrvs)
    (bidirectional-puthash "6." "⒍" sci-abrvs)
    (bidirectional-puthash "7." "⒎" sci-abrvs)
    (bidirectional-puthash "8." "⒏" sci-abrvs)
    (bidirectional-puthash "9." "⒐" sci-abrvs)
    (bidirectional-puthash "0." "🄀" sci-abrvs)

    (bidirectional-puthash "1," "🄂" sci-abrvs)
    (bidirectional-puthash "2," "🄃" sci-abrvs)
    (bidirectional-puthash "3," "🄄" sci-abrvs)
    (bidirectional-puthash "4," "🄅" sci-abrvs)
    (bidirectional-puthash "5," "🄆" sci-abrvs)
    (bidirectional-puthash "6," "🄇" sci-abrvs)
    (bidirectional-puthash "7," "🄈" sci-abrvs)
    (bidirectional-puthash "8," "🄉" sci-abrvs)
    (bidirectional-puthash "9," "🄊" sci-abrvs)
    (bidirectional-puthash "0," "🄁" sci-abrvs))
  (progn ;;COMBINE superscripts and subscripts : [\^_][0-9+-=(){some letter}]  
    ;; superscripts
    (bidirectional-puthash "^0" "⁰" sci-abrvs)
    (bidirectional-puthash "^1" "¹" sci-abrvs)
    (bidirectional-puthash "^2" "²" sci-abrvs)
    (bidirectional-puthash "^3" "³" sci-abrvs)
    (bidirectional-puthash "^4" "⁴" sci-abrvs)
    (bidirectional-puthash "^5" "⁵" sci-abrvs)
    (bidirectional-puthash "^6" "⁶" sci-abrvs)
    (bidirectional-puthash "^7" "⁷" sci-abrvs)
    (bidirectional-puthash "^8" "⁸" sci-abrvs)
    (bidirectional-puthash "^9" "⁹" sci-abrvs)
    (bidirectional-puthash "^+" "⁺" sci-abrvs)
    (bidirectional-puthash "^-" "⁻" sci-abrvs)
    (bidirectional-puthash "^=" "⁼" sci-abrvs)
    (bidirectional-puthash "^(" "⁽" sci-abrvs)
    (bidirectional-puthash "^)" "⁾" sci-abrvs)
    (bidirectional-puthash "^n" "ⁿ" sci-abrvs)
    (bidirectional-puthash "^i" "ⁱ" sci-abrvs)

    ;; subscripts
    (bidirectional-puthash "_(" "₍" sci-abrvs)
    (bidirectional-puthash "_)" "₎" sci-abrvs)
    (bidirectional-puthash "_+" "₊" sci-abrvs)
    (bidirectional-puthash "_-" "₋" sci-abrvs)
    (bidirectional-puthash "_0" "₀" sci-abrvs)
    (bidirectional-puthash "_1" "₁" sci-abrvs)
    (bidirectional-puthash "_2" "₂" sci-abrvs)
    (bidirectional-puthash "_3" "₃" sci-abrvs)
    (bidirectional-puthash "_4" "₄" sci-abrvs)
    (bidirectional-puthash "_5" "₅" sci-abrvs)
    (bidirectional-puthash "_6" "₆" sci-abrvs)
    (bidirectional-puthash "_7" "₇" sci-abrvs)
    (bidirectional-puthash "_8" "₈" sci-abrvs)
    (bidirectional-puthash "_9" "₉" sci-abrvs)
    (bidirectional-puthash "_=" "₌" sci-abrvs)
    (bidirectional-puthash "_a" "ₐ" sci-abrvs)
    (bidirectional-puthash "_e" "ₑ" sci-abrvs)

    (bidirectional-puthash "_h" "ₕ" sci-abrvs)
    (bidirectional-puthash "_i" "ᵢ" sci-abrvs)
    (bidirectional-puthash "_j" "ⱼ" sci-abrvs)
    (bidirectional-puthash "_k" "ₖ" sci-abrvs)
    (bidirectional-puthash "_l" "ₗ" sci-abrvs)
    (bidirectional-puthash "_m" "ₘ" sci-abrvs)
    (bidirectional-puthash "_n" "ₙ" sci-abrvs)
    (bidirectional-puthash "_o" "ₒ" sci-abrvs)
    (bidirectional-puthash "_p" "ₚ" sci-abrvs)
    (bidirectional-puthash "_r" "ᵣ" sci-abrvs)
    (bidirectional-puthash "_s" "ₛ" sci-abrvs)
    (bidirectional-puthash "_t" "ₜ" sci-abrvs)
    (bidirectional-puthash "_u" "ᵤ" sci-abrvs)
    (bidirectional-puthash "_v" "ᵥ" sci-abrvs)
    (bidirectional-puthash "_x" "ₓ" sci-abrvs)
    (bidirectional-puthash "_schwa" "ₔ" sci-abrvs))
  (progn ;;HIEROGLYPH : ARROWS
    (bidirectional-puthash "<-" "←" sci-abrvs)
    (bidirectional-puthash "->" "→" sci-abrvs)
    (bidirectional-puthash "|v" "↓" sci-abrvs)
    (bidirectional-puthash "|^" "↑" sci-abrvs)
    (bidirectional-puthash "<->" "↔" sci-abrvs)
    (bidirectional-puthash "!<-" "↚" sci-abrvs)
    (bidirectional-puthash "!->" "↛" sci-abrvs)
    (bidirectional-puthash "!<->" "↮" sci-abrvs)
    (bidirectional-puthash "<==" "⇐" sci-abrvs)
    (bidirectional-puthash "==>" "⇒" sci-abrvs)
    (bidirectional-puthash "<==>" "⇔" sci-abrvs)
    (bidirectional-puthash "!<==" "⇍" sci-abrvs)
    (bidirectional-puthash "!==>" "⇏" sci-abrvs)
    (bidirectional-puthash "!==>" "⇎" sci-abrvs)
    (bidirectional-puthash "||^" "⇑" sci-abrvs)
    (bidirectional-puthash "||v" "⇓" sci-abrvs)
    (bidirectional-puthash "<===" "⟸" sci-abrvs)
    (bidirectional-puthash "===>" "⟹" sci-abrvs)
    (bidirectional-puthash "<===>" "⟺" sci-abrvs)
    (bidirectional-puthash "<-|" "↤" sci-abrvs)
    (bidirectional-puthash "|->" "↦" sci-abrvs)
    (bidirectional-puthash "<--" "⟵" sci-abrvs)
    (bidirectional-puthash "-->" "⟶" sci-abrvs)
    (bidirectional-puthash "<-->" "⟷" sci-abrvs)
    (bidirectional-puthash "<\\" "↖"sci-abrvs)
    (bidirectional-puthash "\\>" "↘"sci-abrvs)
    (bidirectional-puthash "<-|" "↵" sci-abrvs)
    (bidirectional-puthash "|<-" "⇤"sci-abrvs)
    (bidirectional-puthash "->|" "⇥"sci-abrvs)
    (bidirectional-puthash "|<->|" "↹"sci-abrvs))
  (progn ;;LATIN-EXTEND : [\`\^\/\"\~]{letter}
    
    ;; accented letters

;; 00C0 À LATIN CAPITAL LETTER A WITH GRAVE
;; ≡ 0041  A   0300  ◌̀
;; 00C1 Á LATIN CAPITAL LETTER A WITH ACUTE
;; ≡ 0041  A   0301  ◌́
;; 00C2 Â LATIN CAPITAL LETTER A WITH CIRCUMFLEX
;; ≡ 0041  A   0302  ◌̂
;; 00C3 Ã LATIN CAPITAL LETTER A WITH TILDE
;; ≡ 0041  A   0303  ◌̃
;; 00C4 Ä LATIN CAPITAL LETTER A WITH DIAERESIS
;; ≡ 0041  A   0308  ◌̈
;; 00C5 Å LATIN CAPITAL LETTER A WITH RING ABOVE
;; ≡ 0041  A   030A  ◌̊
;; 0100 Ā LATIN CAPITAL LETTER A WITH MACRON
;; ≡ 0041  A   0304  ◌̄
;; 0102 Ă LATIN CAPITAL LETTER A WITH BREVE
;; ≡ 0041  A   0306  ◌̆
;; 0104 Ą LATIN CAPITAL LETTER A WITH OGONEK
;; ≡ 0041  A   0328  ◌̨

    (bidirectional-puthash "ograve" "̀" sci-abrvs)
    (bidirectional-puthash "oacute" "́" sci-abrvs)
    (bidirectional-puthash "ocircumflex" "̂" sci-abrvs)
    (bidirectional-puthash "otilde" "̃" sci-abrvs)
    (bidirectional-puthash "odiaeresis" "̈" sci-abrvs)
    (bidirectional-puthash "oabove" "̊" sci-abrvs)
    (bidirectional-puthash "omacron" "̄" sci-abrvs)
    (bidirectional-puthash "obreve" "̆" sci-abrvs)
    (bidirectional-puthash "oogonek" "̨" sci-abrvs)

    (bidirectional-puthash "_a" "ā" sci-abrvs)
    (bidirectional-puthash "_e" "ē" sci-abrvs)
    (bidirectional-puthash "_i" "ī" sci-abrvs)
    (bidirectional-puthash "_o" "ō" sci-abrvs)
    (bidirectional-puthash "_u" "ū" sci-abrvs)
    (bidirectional-puthash "_\"u" "ǖ" sci-abrvs)
    (bidirectional-puthash "_A" "Ā" sci-abrvs)
    (bidirectional-puthash "_E" "Ē" sci-abrvs)
    (bidirectional-puthash "_I" "Ī" sci-abrvs)
    (bidirectional-puthash "_O" "Ō" sci-abrvs)
    (bidirectional-puthash "_U" "Ū" sci-abrvs)
    (bidirectional-puthash "_\"U" "Ǖ" sci-abrvs)

    (bidirectional-puthash "`a" "à" sci-abrvs)
    (bidirectional-puthash "`e" "è" sci-abrvs)
    (bidirectional-puthash "`i" "ì" sci-abrvs)
    (bidirectional-puthash "`o" "ò" sci-abrvs)
    (bidirectional-puthash "`u" "ù" sci-abrvs)
    (bidirectional-puthash "`\"u" "ǜ" sci-abrvs)
    (bidirectional-puthash "`A" "À" sci-abrvs)
    (bidirectional-puthash "`E" "È" sci-abrvs)
    (bidirectional-puthash "`I" "Ì" sci-abrvs)
    (bidirectional-puthash "`O" "Ò" sci-abrvs)
    (bidirectional-puthash "`U" "Ù" sci-abrvs)
    (bidirectional-puthash "`\"U" "Ǜ" sci-abrvs)

    (bidirectional-puthash "^a" "â" sci-abrvs)
    (bidirectional-puthash "^e" "ê" sci-abrvs)
    (bidirectional-puthash "^i" "î" sci-abrvs)
    (bidirectional-puthash "^o" "ô" sci-abrvs)
    (bidirectional-puthash "^u" "û" sci-abrvs)
    (bidirectional-puthash "^A" "Â" sci-abrvs)
    (bidirectional-puthash "^E" "Ê" sci-abrvs)
    (bidirectional-puthash "^I" "Î" sci-abrvs)
    (bidirectional-puthash "^O" "Ô" sci-abrvs)
    (bidirectional-puthash "^U" "Û" sci-abrvs)

    (bidirectional-puthash "va" "ǎ" sci-abrvs)
    (bidirectional-puthash "ve" "ě" sci-abrvs)
    (bidirectional-puthash "vi" "ǐ" sci-abrvs)
    (bidirectional-puthash "vo" "ǒ" sci-abrvs)
    (bidirectional-puthash "vu" "ǔ" sci-abrvs)
    (bidirectional-puthash "v\"u" "ǚ" sci-abrvs)
    (bidirectional-puthash "vA" "Ǎ" sci-abrvs)
    (bidirectional-puthash "vE" "Ě" sci-abrvs)
    (bidirectional-puthash "vI" "Ǐ" sci-abrvs)
    (bidirectional-puthash "vO" "Ǒ" sci-abrvs)
    (bidirectional-puthash "vU" "Ǔ" sci-abrvs)
    (bidirectional-puthash "v\"U" "Ǚ" sci-abrvs)

    (bidirectional-puthash "/a" "á" sci-abrvs)
    (bidirectional-puthash "/e" "é" sci-abrvs)
    (bidirectional-puthash "/i" "í" sci-abrvs)
    (bidirectional-puthash "/o" "ó" sci-abrvs)
    (bidirectional-puthash "/u" "ú" sci-abrvs)
    (bidirectional-puthash "/\"u" "ǘ" sci-abrvs)
    (bidirectional-puthash "/n" "ń" sci-abrvs)
    (bidirectional-puthash "/y" "ý" sci-abrvs)
    (bidirectional-puthash "/A" "Á" sci-abrvs)
    (bidirectional-puthash "/E" "É" sci-abrvs)
    (bidirectional-puthash "/I" "Í" sci-abrvs)
    (bidirectional-puthash "/O" "Ó" sci-abrvs)
    (bidirectional-puthash "/U" "Ú" sci-abrvs)
    (bidirectional-puthash "/\"u" "Ǘ" sci-abrvs)
    (bidirectional-puthash "/Y" "Ý" sci-abrvs)

    (bidirectional-puthash "\"A" "Ä" sci-abrvs)
    (bidirectional-puthash "\"E" "Ë" sci-abrvs)
    (bidirectional-puthash "\"I" "Ï" sci-abrvs)
    (bidirectional-puthash "\"O" "Ö" sci-abrvs)
    (bidirectional-puthash "\"U" "Ü" sci-abrvs)
    (bidirectional-puthash "\"a" "ä" sci-abrvs)
    (bidirectional-puthash "\"e" "ë" sci-abrvs)
    (bidirectional-puthash "\"i" "ï" sci-abrvs)
    (bidirectional-puthash "\"o" "ö" sci-abrvs)
    (bidirectional-puthash "\"u" "ü" sci-abrvs)
    (bidirectional-puthash "\"s" "ß" sci-abrvs)
    (bidirectional-puthash "\"y" "ÿ" sci-abrvs)
    (bidirectional-puthash "oA" "Å" sci-abrvs)
    (bidirectional-puthash "oa" "å" sci-abrvs)

    (bidirectional-puthash "AE" "Æ" sci-abrvs)
    (bidirectional-puthash "ae" "æ" sci-abrvs)

    (bidirectional-puthash "~a" "ã" sci-abrvs)
    (bidirectional-puthash "~n" "ñ" sci-abrvs)
    (bidirectional-puthash "~o" "õ" sci-abrvs)
    (bidirectional-puthash "~A" "Ã" sci-abrvs)
    (bidirectional-puthash "~N" "Ñ" sci-abrvs)
    (bidirectional-puthash "~O" "Õ" sci-abrvs))
  (progn ;;GREEK ALPHABET : Alpha->Α, alpha->α
    (bidirectional-puthash "Alpha" "Α" sci-abrvs)
    (bidirectional-puthash "Beta" "Β" sci-abrvs)
    (bidirectional-puthash "Gamma" "Γ" sci-abrvs)
    (bidirectional-puthash "Delta" "Δ" sci-abrvs)
    (bidirectional-puthash "Epsilon" "Ε" sci-abrvs)
    (bidirectional-puthash "Zeta" "Ζ" sci-abrvs)
    (bidirectional-puthash "Eta" "Η" sci-abrvs)
    (bidirectional-puthash "Theta" "Θ" sci-abrvs)
    (bidirectional-puthash "Iota" "Ι" sci-abrvs)
    (bidirectional-puthash "Kappa" "Κ" sci-abrvs)
    (bidirectional-puthash "Lambda" "Λ" sci-abrvs)
    (bidirectional-puthash "Mu" "Μ" sci-abrvs)
    (bidirectional-puthash "Nu" "Ν" sci-abrvs)
    (bidirectional-puthash "Xi" "Ξ" sci-abrvs)
    (bidirectional-puthash "Omicron" "Ο" sci-abrvs)
    (bidirectional-puthash "Pi" "Π" sci-abrvs)
    (bidirectional-puthash "Rho" "Ρ" sci-abrvs)
    (bidirectional-puthash "Sigma" "Σ" sci-abrvs)
    (bidirectional-puthash "Tau" "Τ" sci-abrvs)
    (bidirectional-puthash "Upsilon" "Υ" sci-abrvs)
    (bidirectional-puthash "Phi" "Φ" sci-abrvs)
    (bidirectional-puthash "Chi" "Χ" sci-abrvs)
    (bidirectional-puthash "Psi" "Ψ" sci-abrvs)
    (bidirectional-puthash "Omega" "Ω" sci-abrvs)

    (bidirectional-puthash "alpha" "α" sci-abrvs)
    (bidirectional-puthash "beta" "β" sci-abrvs)
    (bidirectional-puthash "gamma" "γ" sci-abrvs)
    (bidirectional-puthash "delta" "δ" sci-abrvs)
    (bidirectional-puthash "epsilon" "ε" sci-abrvs)
    (bidirectional-puthash "zeta" "ζ" sci-abrvs)
    (bidirectional-puthash "eta" "η" sci-abrvs)
    (bidirectional-puthash "theta" "θ" sci-abrvs)
    (bidirectional-puthash "iota" "ι" sci-abrvs)
    (bidirectional-puthash "kappa" "κ" sci-abrvs)
    (bidirectional-puthash "lambda" "λ" sci-abrvs)
    (bidirectional-puthash "mu" "μ" sci-abrvs)
    (bidirectional-puthash "nu" "ν" sci-abrvs)
    (bidirectional-puthash "xi" "ξ" sci-abrvs)
    (bidirectional-puthash "omicron" "ο" sci-abrvs)
    (bidirectional-puthash "pi" "π" sci-abrvs)
    (bidirectional-puthash "rho" "ρ" sci-abrvs)
    (bidirectional-puthash "sigmaf" "ς" sci-abrvs)
    (bidirectional-puthash "sigma" "σ" sci-abrvs)
    (bidirectional-puthash "tau" "τ" sci-abrvs)
    (bidirectional-puthash "upsilon" "υ" sci-abrvs)
    (bidirectional-puthash "phi" "ϕ" sci-abrvs)
    (bidirectional-puthash "varphi" "φ" sci-abrvs)
    (bidirectional-puthash "chi" "χ" sci-abrvs)
    (bidirectional-puthash "psi" "ψ" sci-abrvs)
    (bidirectional-puthash "omega" "ω" sci-abrvs))
  (progn ;;MUSIC-NOTES
    (bidirectional-puthash "musicnotes" "♩♪♫♬" sci-abrvs)
    (bidirectional-puthash "flat" "♭" sci-abrvs)
    (bidirectional-puthash "natural" "♮" sci-abrvs)
    (bidirectional-puthash "sharp" "♯" sci-abrvs))
  (progn ;;FULLNAME ASTRONOMY
    (bidirectional-puthash "sun" "☉" sci-abrvs)
    (bidirectional-puthash "sunray" "☼" sci-abrvs)
    (bidirectional-puthash "moon" "☾" sci-abrvs)
    (bidirectional-puthash "moonr" "☽" sci-abrvs)
    (bidirectional-puthash "mercury" "☿" sci-abrvs)
    (bidirectional-puthash "earth" "♁" sci-abrvs)
    (bidirectional-puthash "saturn" "♄" sci-abrvs)
    (bidirectional-puthash "uranus" "♅" sci-abrvs)
    (bidirectional-puthash "neptune" "♆" sci-abrvs)
    (bidirectional-puthash "pluto" "♇" sci-abrvs)
    (bidirectional-puthash "jupiter" "♃" sci-abrvs)
    (bidirectional-puthash "male" "♂" sci-abrvs)
    (bidirectional-puthash "mars" "♂" sci-abrvs)
    (bidirectional-puthash "female" "♀" sci-abrvs)
    (bidirectional-puthash "venus" "♀" sci-abrvs)
    (bidirectional-puthash "comet" "☄" sci-abrvs))
  (progn ;;FULLNAME COMMON: from 00A0
    (bidirectional-puthash "nbsp" "0020" sci-abrvs)
    (bidirectional-puthash "bull" "•" sci-abrvs)
    (bidirectional-puthash "inv!" "¡" sci-abrvs)
    (bidirectional-puthash "cent" "¢" sci-abrvs)
    (bidirectional-puthash "pound" "£" sci-abrvs)
    (bidirectional-puthash "currency" "¤" sci-abrvs)
    (bidirectional-puthash "yen" "¥" sci-abrvs)
    (bidirectional-puthash "brokenbar" "¦" sci-abrvs)
    (bidirectional-puthash "section" "§" sci-abrvs)
    (bidirectional-puthash "diaeresis" "¨" sci-abrvs)
    (bidirectional-puthash "copyright" "©" sci-abrvs)
    (bidirectional-puthash "foi" "ª" sci-abrvs)
    (bidirectional-puthash "not" "¬" sci-abrvs)
    (bidirectional-puthash "register" "®" sci-abrvs)
    (bidirectional-puthash "macron" "¯" sci-abrvs)
    (bidirectional-puthash "degree" "°" sci-abrvs)
    (bidirectional-puthash "plusminus" "±" sci-abrvs)
    (bidirectional-puthash "acute" "´" sci-abrvs)
    (bidirectional-puthash "micro" "µ" sci-abrvs)
    (bidirectional-puthash "paragraph" "¶" sci-abrvs)
    (bidirectional-puthash "middot" "·" sci-abrvs)
    (bidirectional-puthash "cedilla" "¸" sci-abrvs)
    (bidirectional-puthash "moi" "º" sci-abrvs)
    (bidirectional-puthash "1/4" "¼" sci-abrvs)
    (bidirectional-puthash "1/2" "½" sci-abrvs)
    (bidirectional-puthash "3/4" "¾" sci-abrvs)
    (bidirectional-puthash "0/00" "‰" sci-abrvs)
    (bidirectional-puthash "tm" "™" sci-abrvs)
    (bidirectional-puthash "..." "…" sci-abrvs)
    (bidirectional-puthash "inv?" "¿" sci-abrvs)
    (bidirectional-puthash "AE" "Æ" sci-abrvs)
    (bidirectional-puthash "Ccedilla" "Ç" sci-abrvs)
    (bidirectional-puthash "ETH" "Ð" sci-abrvs)
    (bidirectional-puthash "Oslash" "Ø" sci-abrvs)
    (bidirectional-puthash "THORN" "Þ" sci-abrvs)
    (bidirectional-puthash "sharps" "ß" sci-abrvs)
    (bidirectional-puthash "aelig" "æ" sci-abrvs)
    (bidirectional-puthash "ccedilla" "ç" sci-abrvs)
    (bidirectional-puthash "eth" "ð" sci-abrvs)
    (bidirectional-puthash "oslash" "ø" sci-abrvs)
    (bidirectional-puthash "thorn" "þ" sci-abrvs)
    (bidirectional-puthash "OEg" "Œ" sci-abrvs)
    (bidirectional-puthash "oeg" "œ" sci-abrvs)
    (bidirectional-puthash "Scaron" "Š" sci-abrvs)
    (bidirectional-puthash "scaron" "š" sci-abrvs)
    (bidirectional-puthash "Yumlaut" "Ÿ" sci-abrvs)
    (bidirectional-puthash "function" "ƒ" sci-abrvs)
    (bidirectional-puthash "circumflex" "ˆ" sci-abrvs)
    (bidirectional-puthash "tilde" "˜" sci-abrvs)
    (bidirectional-puthash "thetasym" "ϑ" sci-abrvs)
    (bidirectional-puthash "upsilonhoo" "ϒ" sci-abrvs)
    (bidirectional-puthash "pisym" "ϖ" sci-abrvs)
    )
  (progn ;;MATH
    (bidirectional-puthash "R2" "ℝ²" sci-abrvs)
    (bidirectional-puthash "R3" "ℝ³" sci-abrvs)
    (bidirectional-puthash "floor" "⌊⌋" sci-abrvs)
    (bidirectional-puthash "ceiling" "⌈⌉" sci-abrvs)
    (bidirectional-puthash "any" "∀" sci-abrvs)
    (bidirectional-puthash "partial" "∂" sci-abrvs)
    (bidirectional-puthash "der" "∂" sci-abrvs)
    (bidirectional-puthash "exist" "∃" sci-abrvs)
    (bidirectional-puthash "nabla" "∇" sci-abrvs)
    (bidirectional-puthash "del" "∇" sci-abrvs)
    (bidirectional-puthash "in" "∈" sci-abrvs)
    (bidirectional-puthash "times" "×" sci-abrvs)
    (bidirectional-puthash "divide" "÷" sci-abrvs)
    (bidirectional-puthash "notin" "∉" sci-abrvs)
    (bidirectional-puthash "ni" "∋" sci-abrvs)
    (bidirectional-puthash "product" "∏" sci-abrvs)
    (bidirectional-puthash "sum" "∑" sci-abrvs)
    (bidirectional-puthash "minus" "−" sci-abrvs)
    (bidirectional-puthash "asteriskop" "∗" sci-abrvs)
    (bidirectional-puthash "root" "√" sci-abrvs)
    (bidirectional-puthash "root2" "√" sci-abrvs)
    (bidirectional-puthash "root3" "∛" sci-abrvs)
    (bidirectional-puthash "root4" "∜" sci-abrvs)
    (bidirectional-puthash "proportion" "∝" sci-abrvs)
    (bidirectional-puthash "inf" "∞" sci-abrvs)
    (bidirectional-puthash "angle" "∠" sci-abrvs)
    (bidirectional-puthash "and" "∧" sci-abrvs)
    (bidirectional-puthash "or" "∨" sci-abrvs)
    (bidirectional-puthash "xor" "⊻" sci-abrvs)
    (bidirectional-puthash "nand" "⊼" sci-abrvs)
    (bidirectional-puthash "nor" "⊽" sci-abrvs)
    (bidirectional-puthash "intersection" "∩" sci-abrvs)
    (bidirectional-puthash "union" "∪" sci-abrvs)
    (bidirectional-puthash "int " "∫" sci-abrvs)
    (bidirectional-puthash "therefore" "∴" sci-abrvs)
    (bidirectional-puthash "because" "∵" sci-abrvs)
    (bidirectional-puthash "tildeop" "∼" sci-abrvs)
    (bidirectional-puthash "+-" "±" sci-abrvs)
    (bidirectional-puthash "-+" "∓" sci-abrvs)
    (bidirectional-puthash "~=" "≅" sci-abrvs)
    (bidirectional-puthash "~~" "≈" sci-abrvs)  
    (bidirectional-puthash "!=" "≠" sci-abrvs)
    (bidirectional-puthash "===" "≡" sci-abrvs)
    (bidirectional-puthash "<=" "≤" sci-abrvs)
    (bidirectional-puthash ">=" "≥" sci-abrvs)
    (bidirectional-puthash "-<" "≺" sci-abrvs)
    (bidirectional-puthash ">-" "≻" sci-abrvs)
    (bidirectional-puthash "-<=" "⪰" sci-abrvs)
    (bidirectional-puthash ">-=" "⪯" sci-abrvs)
    (bidirectional-puthash "_<=" "≼" sci-abrvs)
    (bidirectional-puthash ">_=" "≽" sci-abrvs)
    (bidirectional-puthash "subset" "⊂" sci-abrvs)
    (bidirectional-puthash "superset" "⊃" sci-abrvs)
    (bidirectional-puthash "nsubset" "⊄" sci-abrvs)
    (bidirectional-puthash "subsete" "⊆" sci-abrvs)
    (bidirectional-puthash "supersete" "⊇" sci-abrvs)
    (bidirectional-puthash "emptyset" "∅" sci-abrvs)
    (bidirectional-puthash "oplus" "⊕" sci-abrvs)
    (bidirectional-puthash "otimes" "⊗" sci-abrvs)
    (bidirectional-puthash "perpendicular" "⊥" sci-abrvs)
    (bidirectional-puthash "dot" "⋅" sci-abrvs)
    (bidirectional-puthash "lang" "〈" sci-abrvs)
    (bidirectional-puthash "rang" "〉" sci-abrvs)
    (bidirectional-puthash "⋮" "vdots" sci-abrvs)
    (bidirectional-puthash "⋯" "cdots" sci-abrvs)
    (bidirectional-puthash "⋰" "bdots" sci-abrvs)
    (bidirectional-puthash "⋱" "ddots" sci-abrvs))
  (progn ;;ℂℍℕℙℚℝℤⅆⅇⅈⅉ bb{letter} \mathbb{}
    (bidirectional-puthash "bbC" "ℂ" sci-abrvs)
    (bidirectional-puthash "bbH" "ℍ" sci-abrvs)
    (bidirectional-puthash "bbN" "ℕ" sci-abrvs)
    (bidirectional-puthash "bbP" "ℙ" sci-abrvs)
    (bidirectional-puthash "bbQ" "ℚ" sci-abrvs)
    (bidirectional-puthash "bbR" "ℝ" sci-abrvs)
    (bidirectional-puthash "bbZ" "ℤ" sci-abrvs)
    (bidirectional-puthash "bbd" "ⅆ" sci-abrvs)
    (bidirectional-puthash "bbe" "ⅇ" sci-abrvs)
    (bidirectional-puthash "bbi" "ⅈ" sci-abrvs)
    (bidirectional-puthash "bbj" "ⅉ" sci-abrvs))
  (progn ;;DONE sc+[Letter] Scripted letter forms. Most are outside BMP.
    (bidirectional-puthash "sca" "𝒶" sci-abrvs)
    (bidirectional-puthash "scb" "𝒷" sci-abrvs)
    (bidirectional-puthash "scc" "𝒸" sci-abrvs)
    (bidirectional-puthash "scd" "𝒹" sci-abrvs)
    (bidirectional-puthash "sce" "ℯ" sci-abrvs) ; in BMP
    (bidirectional-puthash "scf" "𝒻" sci-abrvs)
    (bidirectional-puthash "scg" "ℊ" sci-abrvs) ; in BMP
    (bidirectional-puthash "sch" "𝒽" sci-abrvs)
    (bidirectional-puthash "sci" "𝒾" sci-abrvs)
    (bidirectional-puthash "scj" "𝒿" sci-abrvs)
    (bidirectional-puthash "sck" "𝓀" sci-abrvs)
    (bidirectional-puthash "scl2" "𝓁" sci-abrvs)
    (bidirectional-puthash "scl" "ℓ" sci-abrvs) ;in BMP
    (bidirectional-puthash "scm" "𝓂" sci-abrvs)
    (bidirectional-puthash "scn" "𝓃" sci-abrvs)
    (bidirectional-puthash "sco" "ℴ" sci-abrvs) ; in BMP
    (bidirectional-puthash "scp" "𝓅" sci-abrvs)
    (bidirectional-puthash "scq" "𝓆" sci-abrvs)
    (bidirectional-puthash "scw" "𝓌" sci-abrvs)
    (bidirectional-puthash "scx" "𝓍" sci-abrvs)
    (bidirectional-puthash "scy" "𝓎" sci-abrvs)
    (bidirectional-puthash "scz" "𝓏" sci-abrvs)

    (bidirectional-puthash "scB" "ℬ" sci-abrvs)
    (bidirectional-puthash "scE" "ℰ" sci-abrvs)
    (bidirectional-puthash "scF" "ℱ" sci-abrvs)
    (bidirectional-puthash "scH" "ℋ" sci-abrvs)
    (bidirectional-puthash "scI" "ℐ" sci-abrvs)
    (bidirectional-puthash "scL" "ℒ" sci-abrvs)
    (bidirectional-puthash "scM" "ℳ" sci-abrvs)
    (bidirectional-puthash "scP" "℘" sci-abrvs)
    (bidirectional-puthash "scR" "ℛ" sci-abrvs))
  (progn ;;DONE go+[Letter] gothic letter forms (aka FRANKTUR). Most are outside BMP
    (bidirectional-puthash "goA" "𝔄" sci-abrvs)
    (bidirectional-puthash "goB" "𝔅" sci-abrvs)
    (bidirectional-puthash "goC" "ℭ" sci-abrvs)
    (bidirectional-puthash "goD" "𝔇" sci-abrvs)
    (bidirectional-puthash "goE" "𝔈" sci-abrvs)
    (bidirectional-puthash "goF" "𝔉" sci-abrvs)
    (bidirectional-puthash "goG" "𝔊" sci-abrvs)
    (bidirectional-puthash "goH" "ℌ" sci-abrvs)
    (bidirectional-puthash "goI" "ℑ" sci-abrvs)
    (bidirectional-puthash "goJ" "𝔍" sci-abrvs)
    (bidirectional-puthash "goK" "𝔎" sci-abrvs)
    (bidirectional-puthash "goL" "𝔏" sci-abrvs)
    (bidirectional-puthash "goM" "𝔐" sci-abrvs)
    (bidirectional-puthash "goN" "𝔑" sci-abrvs)
    (bidirectional-puthash "goO" "𝔒" sci-abrvs)
    (bidirectional-puthash "goP" "𝔓" sci-abrvs)
    (bidirectional-puthash "goQ" "𝔔" sci-abrvs)
    (bidirectional-puthash "goR" "ℜ" sci-abrvs)
    (bidirectional-puthash "goS" "𝔖" sci-abrvs)
    (bidirectional-puthash "goT" "𝔗" sci-abrvs)
    (bidirectional-puthash "goU" "𝔘" sci-abrvs)
    (bidirectional-puthash "goV" "𝔙" sci-abrvs)
    (bidirectional-puthash "goW" "𝔚" sci-abrvs)
    (bidirectional-puthash "goX" "𝔛" sci-abrvs)
    (bidirectional-puthash "goY" "𝔜" sci-abrvs)
    (bidirectional-puthash "goZ" "ℨ" sci-abrvs)
    (bidirectional-puthash "goa" "𝔞" sci-abrvs)
    (bidirectional-puthash "gob" "𝔟" sci-abrvs)
    (bidirectional-puthash "goc" "𝔠" sci-abrvs)
    (bidirectional-puthash "god" "𝔡" sci-abrvs)
    (bidirectional-puthash "goe" "𝔢" sci-abrvs)
    (bidirectional-puthash "gof" "𝔣" sci-abrvs)
    (bidirectional-puthash "gog" "𝔤" sci-abrvs)
    (bidirectional-puthash "goh" "𝔥" sci-abrvs)
    (bidirectional-puthash "goi" "𝔦" sci-abrvs)
    (bidirectional-puthash "goj" "𝔧" sci-abrvs)
    (bidirectional-puthash "gok" "𝔨" sci-abrvs)
    (bidirectional-puthash "gol" "𝔩" sci-abrvs)
    (bidirectional-puthash "gom" "𝔪" sci-abrvs)
    (bidirectional-puthash "gon" "𝔫" sci-abrvs)
    (bidirectional-puthash "goo" "𝔬" sci-abrvs)
    (bidirectional-puthash "gop" "𝔭" sci-abrvs)
    (bidirectional-puthash "goq" "𝔮" sci-abrvs)
    (bidirectional-puthash "gor" "𝔯" sci-abrvs)
    (bidirectional-puthash "gos" "𝔰" sci-abrvs)
    (bidirectional-puthash "got" "𝔱" sci-abrvs)
    (bidirectional-puthash "gou" "𝔲" sci-abrvs)
    (bidirectional-puthash "gov" "𝔳" sci-abrvs)
    (bidirectional-puthash "gow" "𝔴" sci-abrvs)
    (bidirectional-puthash "gox" "𝔵" sci-abrvs)
    (bidirectional-puthash "goy" "𝔶" sci-abrvs)
    (bidirectional-puthash "goz" "𝔷" sci-abrvs))
  
  (progn ;;SYMBOL and Punctuations
    (bidirectional-puthash "ndash" "–" sci-abrvs)
    (bidirectional-puthash "mdash" "—" sci-abrvs)
    (bidirectional-puthash "fdash" "‒" sci-abrvs)
    (bidirectional-puthash "sbquo" "‚" sci-abrvs)
    (bidirectional-puthash "dbquo" "„" sci-abrvs)
    (bidirectional-puthash "dagger" "†" sci-abrvs)
    (bidirectional-puthash "Dagger" "‡" sci-abrvs)
    (bidirectional-puthash "prime" "′" sci-abrvs)
    (bidirectional-puthash "Prime" "″" sci-abrvs)
    (bidirectional-puthash "laquo" "‹" sci-abrvs)
    (bidirectional-puthash "raquo" "›" sci-abrvs)
    (bidirectional-puthash "oline" "‾" sci-abrvs)
    (bidirectional-puthash "frasl" "⁄" sci-abrvs)
    (bidirectional-puthash "euro" "€" sci-abrvs)
    (bidirectional-puthash "image" "ℑ" sci-abrvs)
    (bidirectional-puthash "weierp" "℘" sci-abrvs)
    (bidirectional-puthash "real" "ℜ" sci-abrvs)
    (bidirectional-puthash "dag" "†" sci-abrvs)
    (bidirectional-puthash "ddag" "‡" sci-abrvs)
    (bidirectional-puthash "--" "—" sci-abrvs)
    (bidirectional-puthash "-" "−" sci-abrvs)
    (bidirectional-puthash "s&" "﹠" sci-abrvs)
    (bidirectional-puthash "?!" "⁈" sci-abrvs)
    (bidirectional-puthash "!?" "⁉" sci-abrvs)
    (bidirectional-puthash "!!" "‼" sci-abrvs))

  (progn  ;; computer keys and symbols
    (bidirectional-puthash "cmd" "⌘" sci-abrvs)
    (bidirectional-puthash "opt" "⌥" sci-abrvs)
    (bidirectional-puthash "caret" "‸" sci-abrvs)
    (bidirectional-puthash "pgup" "⇞"sci-abrvs)
    (bidirectional-puthash "pgdn" "⇟"sci-abrvs)

    (bidirectional-puthash "power" "⎋"sci-abrvs)
    (bidirectional-puthash "eject" "⏏"sci-abrvs)
    (bidirectional-puthash "undo" "↶"sci-abrvs)
    (bidirectional-puthash "redo" "↷"sci-abrvs)
    (bidirectional-puthash "shift" "⇧"sci-abrvs)

    (bidirectional-puthash "enter" "⌤"sci-abrvs)
    (bidirectional-puthash "return3" "↵"sci-abrvs)
    (bidirectional-puthash "return2" "↩"sci-abrvs)
    (bidirectional-puthash "return" "⏎"sci-abrvs)

    (bidirectional-puthash "delete" "⌫"sci-abrvs)
    (bidirectional-puthash "dell" "⌫"sci-abrvs)
    (bidirectional-puthash "delr" "⌦"sci-abrvs)
    (bidirectional-puthash "kbd" "⌨"sci-abrvs)
    (bidirectional-puthash "_" "␣"sci-abrvs)

    (bidirectional-puthash "lrarr" "⇄"sci-abrvs)
    (bidirectional-puthash "clear" "⌧"sci-abrvs)
    (bidirectional-puthash "ibeam" "⌶"sci-abrvs)
    (bidirectional-puthash "prevpage" "⎗"sci-abrvs)
    (bidirectional-puthash "nextpage" "⎘"sci-abrvs)
    (bidirectional-puthash "print" "⎙"sci-abrvs)
    (bidirectional-puthash "watch" "⌚"sci-abrvs)
    (bidirectional-puthash "hourglass" "⌛"sci-abrvs)
    (bidirectional-puthash "scissor" "✂"sci-abrvs)
    (bidirectional-puthash "scissorw" "✄"sci-abrvs)
    (bidirectional-puthash "envelope" "✉"sci-abrvs)
    (bidirectional-puthash "writing" "✍"sci-abrvs))
  (progn ;;punctuations
    (bidirectional-puthash "[" "「」" sci-abrvs)
    (bidirectional-puthash "[[" "『』" sci-abrvs)
    (bidirectional-puthash "[2" "【】" sci-abrvs)
    (bidirectional-puthash "[3" "〖〗" sci-abrvs)
    (bidirectional-puthash "(" "〔〕" sci-abrvs)
    (bidirectional-puthash "<" "〈〉" sci-abrvs)
    (bidirectional-puthash "<2" "‹›" sci-abrvs)
    (bidirectional-puthash "<<2" "«»" sci-abrvs))
  ;; letter-like forms
  
  (bidirectional-puthash "aleph" "ℵ" sci-abrvs)
  (bidirectional-puthash "beth" "ב" sci-abrvs)
  (bidirectional-puthash "gimel" "ג" sci-abrvs)
  (bidirectional-puthash "daleth" "ד" sci-abrvs)
  (bidirectional-puthash "Digamma" "Ϝ" sci-abrvs)
  (bidirectional-puthash "digamma" "ϝ" sci-abrvs)
  (bidirectional-puthash "angstrom" "Å" sci-abrvs)

  (bidirectional-puthash ":=" "≔" sci-abrvs) ; define
  (bidirectional-puthash "=:" "≕" sci-abrvs) ; define

  ;; operators
  (bidirectional-puthash "c+" "⊕" sci-abrvs)
  (bidirectional-puthash "c*" "⊗" sci-abrvs)
  (bidirectional-puthash "*" "×" sci-abrvs)
  (bidirectional-puthash "'" "′" sci-abrvs)
  (bidirectional-puthash "''" "″" sci-abrvs)
  (bidirectional-puthash "'''" "‴" sci-abrvs)
  (bidirectional-puthash "." "·" sci-abrvs)
  (bidirectional-puthash "cint" "∮" sci-abrvs) ; contour integral
  (bidirectional-puthash "ccint" "∲" sci-abrvs)
  (bidirectional-puthash "cccint" "∳" sci-abrvs)


  (bidirectional-puthash "measuredangle" "∡" sci-abrvs)
  (bidirectional-puthash "sphericalangle" "∢" sci-abrvs)

  ;; some of the following are duplicates using full words as abbrev

  (progn ;;shapes
    (bidirectional-puthash "square" "■" sci-abrvs)
    (bidirectional-puthash "square2" "□" sci-abrvs)
    (bidirectional-puthash "circle" "●" sci-abrvs)
    (bidirectional-puthash "circle2" "○" sci-abrvs)
    (bidirectional-puthash "triangle" "▲" sci-abrvs)
    (bidirectional-puthash "triangle2" "△" sci-abrvs)
    (bidirectional-puthash "ltriangle" "◀" sci-abrvs)
    (bidirectional-puthash "rtriangle" "▶" sci-abrvs)
    (bidirectional-puthash "dtriangle" "▼" sci-abrvs)
    (bidirectional-puthash "ltriangle2" "◁" sci-abrvs)
    (bidirectional-puthash "rtriangle2" "▷" sci-abrvs)
    (bidirectional-puthash "triangle2" "△" sci-abrvs)
    (bidirectional-puthash "dtriangle2" "▽" sci-abrvs)
    (bidirectional-puthash "dia" "◇" sci-abrvs)
    (bidirectional-puthash "diab" "◆" sci-abrvs)
    (bidirectional-puthash ":)" "☺" sci-abrvs)
    (bidirectional-puthash ":(" "☹" sci-abrvs)

    (bidirectional-puthash "star" "★" sci-abrvs)
    (bidirectional-puthash "star2" "☆" sci-abrvs)
    (bidirectional-puthash "spade" "♠" sci-abrvs)
    (bidirectional-puthash "spade2" "♤" sci-abrvs)
    (bidirectional-puthash "club" "♣" sci-abrvs)
    (bidirectional-puthash "club2" "♧" sci-abrvs)
    (bidirectional-puthash "heart" "♥" sci-abrvs)
    (bidirectional-puthash "heart2" "♡" sci-abrvs)
    (bidirectional-puthash "diamond" "♦" sci-abrvs)
    (bidirectional-puthash "diamond2" "♢" sci-abrvs)
    (bidirectional-puthash "lozenge" "◊" sci-abrvs))
  
  (bidirectional-puthash "rightangle" "⦜" sci-abrvs)
  (bidirectional-puthash "cross" "⨯" sci-abrvs)
  (progn ;;FULL-WIDTH-CHAR : fw{char}
    (bidirectional-puthash "fw," "，" sci-abrvs)
    (bidirectional-puthash "fw." "．" sci-abrvs)
    (bidirectional-puthash "fw:" "：" sci-abrvs)
    (bidirectional-puthash "fw;" "；" sci-abrvs)
    (bidirectional-puthash "fw!" "！" sci-abrvs)
    (bidirectional-puthash "fw?" "？" sci-abrvs)
    (bidirectional-puthash "fw`" "｀" sci-abrvs)
    (bidirectional-puthash "fw'" "＇" sci-abrvs)
    (bidirectional-puthash "fw\"" "＂" sci-abrvs)
    (bidirectional-puthash "fw&" "＆" sci-abrvs)
    (bidirectional-puthash "fw(" "（" sci-abrvs)
    (bidirectional-puthash "fw)" "）" sci-abrvs)
    (bidirectional-puthash "fw[" "［" sci-abrvs)
    (bidirectional-puthash "fw]" "］" sci-abrvs)
    (bidirectional-puthash "fw{" "｛" sci-abrvs)
    (bidirectional-puthash "fw}" "｝" sci-abrvs)
    (bidirectional-puthash "fw@" "＠" sci-abrvs)
    (bidirectional-puthash "fw^" "＾" sci-abrvs)
    (bidirectional-puthash "fw`" "｀" sci-abrvs)
    (bidirectional-puthash "fw~" "～" sci-abrvs)
    (bidirectional-puthash "fw_" "＿" sci-abrvs)
    (bidirectional-puthash "fw¯" "￣" sci-abrvs);MACRON
    (bidirectional-puthash "fw#" "＃" sci-abrvs)
    (bidirectional-puthash "fw+" "＋" sci-abrvs)
    (bidirectional-puthash "fw-" "－" sci-abrvs)
    (bidirectional-puthash "fw*" "＊" sci-abrvs)
    (bidirectional-puthash "fw=" "＝" sci-abrvs)
    (bidirectional-puthash "fw<" "＜" sci-abrvs)
    (bidirectional-puthash "fw>" "＞" sci-abrvs)
    (bidirectional-puthash "fw%" "％" sci-abrvs)
    (bidirectional-puthash "fw|" "｜" sci-abrvs)
    (bidirectional-puthash "fw¦" "￤" sci-abrvs)
    (bidirectional-puthash "fw/" "／" sci-abrvs)
    (bidirectional-puthash "fw\\" "＼" sci-abrvs)
    (bidirectional-puthash "fw¬" "￢" sci-abrvs)
    (bidirectional-puthash "fw((" "｟" sci-abrvs)
    (bidirectional-puthash "fw))" "｠" sci-abrvs)
    (bidirectional-puthash "fw$" "＄" sci-abrvs)
    (bidirectional-puthash "fw£" "￡" sci-abrvs)
    (bidirectional-puthash "fw¢" "￠" sci-abrvs)
    (bidirectional-puthash "fw₩" "￦" sci-abrvs) ; WON SIGN
    (bidirectional-puthash "fw¥" "￥" sci-abrvs) ; YEN SIGN
    (bidirectional-puthash "fw0" "０" sci-abrvs)
    (bidirectional-puthash "fw1" "１" sci-abrvs)
    (bidirectional-puthash "fw2" "２" sci-abrvs)
    (bidirectional-puthash "fw3" "３" sci-abrvs)
    (bidirectional-puthash "fw4" "４" sci-abrvs)
    (bidirectional-puthash "fw5" "５" sci-abrvs)
    (bidirectional-puthash "fw6" "６" sci-abrvs)
    (bidirectional-puthash "fw7" "７" sci-abrvs)
    (bidirectional-puthash "fw8" "８" sci-abrvs)
    (bidirectional-puthash "fw9" "９" sci-abrvs)
    (bidirectional-puthash "fwA" "Ａ" sci-abrvs)
    (bidirectional-puthash "fwB" "Ｂ" sci-abrvs)
    (bidirectional-puthash "fwC" "Ｃ" sci-abrvs)
    (bidirectional-puthash "fwD" "Ｄ" sci-abrvs)
    (bidirectional-puthash "fwE" "Ｅ" sci-abrvs)
    (bidirectional-puthash "fwF" "Ｆ" sci-abrvs)
    (bidirectional-puthash "fwG" "Ｇ" sci-abrvs)
    (bidirectional-puthash "fwH" "Ｈ" sci-abrvs)
    (bidirectional-puthash "fwI" "Ｉ" sci-abrvs)
    (bidirectional-puthash "fwJ" "Ｊ" sci-abrvs)
    (bidirectional-puthash "fwK" "Ｋ" sci-abrvs)
    (bidirectional-puthash "fwL" "Ｌ" sci-abrvs)
    (bidirectional-puthash "fwM" "Ｍ" sci-abrvs)
    (bidirectional-puthash "fwN" "Ｎ" sci-abrvs)
    (bidirectional-puthash "fwO" "Ｏ" sci-abrvs)
    (bidirectional-puthash "fwP" "Ｐ" sci-abrvs)
    (bidirectional-puthash "fwQ" "Ｑ" sci-abrvs)
    (bidirectional-puthash "fwR" "Ｒ" sci-abrvs)
    (bidirectional-puthash "fwS" "Ｓ" sci-abrvs)
    (bidirectional-puthash "fwT" "Ｔ" sci-abrvs)
    (bidirectional-puthash "fwU" "Ｕ" sci-abrvs)
    (bidirectional-puthash "fwV" "Ｖ" sci-abrvs)
    (bidirectional-puthash "fwW" "Ｗ" sci-abrvs)
    (bidirectional-puthash "fwX" "Ｘ" sci-abrvs)
    (bidirectional-puthash "fwY" "Ｙ" sci-abrvs)
    (bidirectional-puthash "fwZ" "Ｚ" sci-abrvs)
    (bidirectional-puthash "fwa" "ａ" sci-abrvs)
    (bidirectional-puthash "fwb" "ｂ" sci-abrvs)
    (bidirectional-puthash "fwc" "ｃ" sci-abrvs)
    (bidirectional-puthash "fwd" "ｄ" sci-abrvs)
    (bidirectional-puthash "fwe" "ｅ" sci-abrvs)
    (bidirectional-puthash "fwf" "ｆ" sci-abrvs)
    (bidirectional-puthash "fwg" "ｇ" sci-abrvs)
    (bidirectional-puthash "fwh" "ｈ" sci-abrvs)
    (bidirectional-puthash "fwi" "ｉ" sci-abrvs)
    (bidirectional-puthash "fwj" "ｊ" sci-abrvs)
    (bidirectional-puthash "fwk" "ｋ" sci-abrvs)
    (bidirectional-puthash "fwl" "ｌ" sci-abrvs)
    (bidirectional-puthash "fwm" "ｍ" sci-abrvs)
    (bidirectional-puthash "fwn" "ｎ" sci-abrvs)
    (bidirectional-puthash "fwo" "ｏ" sci-abrvs)
    (bidirectional-puthash "fwp" "ｐ" sci-abrvs)
    (bidirectional-puthash "fwq" "ｑ" sci-abrvs)
    (bidirectional-puthash "fwr" "ｒ" sci-abrvs)
    (bidirectional-puthash "fws" "ｓ" sci-abrvs)
    (bidirectional-puthash "fwt" "ｔ" sci-abrvs)
    (bidirectional-puthash "fwu" "ｕ" sci-abrvs)
    (bidirectional-puthash "fwv" "ｖ" sci-abrvs)
    (bidirectional-puthash "fww" "ｗ" sci-abrvs)
    (bidirectional-puthash "fwx" "ｘ" sci-abrvs)
    (bidirectional-puthash "fwy" "ｙ" sci-abrvs)
    (bidirectional-puthash "fwz" "ｚ" sci-abrvs)))




(defun sci-hash-to-list (hashtable)
  "Return a list that represent the HASHTABLE."
  (let (mylist)
    (maphash (lambda (kk vv) (setq mylist (cons (list vv kk) mylist))) hashtable)
    mylist))

(defun sci-list-math-symbols ()
  "Print a list of math symbols and their input abbreviations.
See `sci-mode'."
  (interactive)
  (let (mylist mylistSorted)
    (setq mylist (sci-hash-to-list sci-abrvs))
    (setq mylistSorted (sort mylist (lambda (a b) (string< (car a) (car b)))) )
    (with-output-to-temp-buffer "*sci math symbol input*"
      (mapc (lambda (tt) "" (interactive)
	      (princ (concat (car tt) " " (car (cdr tt)) "\n")))
	    mylistSorted))))

(defvar sci-keymap nil "Keymap for sci-math-symbols-input mode.")

(progn
  (setq sci-keymap (make-sparse-keymap))
  (define-key sci-keymap (kbd "M-C M-SPC") 'sci-change-to-symbol))

(defun sci-abbr-to-symbol (inputString)
  "Returns a char corresponding to inputString."
  (let (resultSymbol charByNameResult)
    (setq resultSymbol (gethash inputString sci-abrvs))
    (cond
     (resultSymbol resultSymbol)
     ;; decimal. 「945」 or 「#945」
     ((string-match "\\`#?\\([0-9]+\\)\\'" inputString) (char-to-string (string-to-number (match-string 1 inputString))))
     ;; e.g. decimal with html entity markup. 「&#945;」
     ((string-match "\\`&#\\([0-9]+\\);\\'" inputString) (char-to-string (string-to-number (match-string 1 inputString))))
     ;; hex number. e.g. 「x3b1」 or 「#x3b1」
     ((string-match "\\`#?x\\([0-9a-fA-F]+\\)\\'" inputString) (char-to-string (string-to-number (match-string 1 inputString) 16)))
     ;; html entity hex number. e.g. 「&#x3b1;」
     ((string-match "\\`&#x\\([0-9a-fA-F]+\\);\\'" inputString) (char-to-string (string-to-number (match-string 1 inputString) 16)))
     ;; unicode full name. e.g. 「GREEK SMALL LETTER ALPHA」
     ((and (string-match "\\`\\([- a-zA-Z0-9]+\\)\\'" inputString) (setq charByNameResult (assoc-string inputString (ucs-names) t) )) (char-to-string (cdr charByNameResult)))
     (t nil))))

(defun sci-change-to-symbol (&optional print-message-when-no-match)
  "Change text selection or word to the left of cursor into a Unicode character.

A valid input can be any abbreviation listed by the command `sci-list-math-symbols', or, any of the following form:

 945     ← decimal
 #945    ← decimal with prefix #
 &#945;  ← XML entity syntax

 x3b1    ← hexadimal with prefix x
 #x3b1   ← hexadimal with prefix #x
 &#x3b1; ← XML entity syntax

Full Unicode name can also be used, e.g. 「greek small letter alpha」.

If preceded by `universal-argument', print error message when no valid abbrev found.

See also: `sci-mode'."
  (interactive "P")
  (let (p1 p2 inputStr resultSymbol)
    (if (region-active-p)
	;; if there's a text selection, then use that as input.
	(progn
	  (setq p1 (region-beginning))
	  (setq p2 (region-end))
	  (setq inputStr (buffer-substring-no-properties p1 p2) )
	  (setq resultSymbol (sci-abbr-to-symbol inputStr))
	  (when resultSymbol (progn (delete-region p1 p2) (insert resultSymbol)) ) )

      ;; if there's no text selection, grab all chars to the left of cursor point up to whitespace, try each string until there a valid abbrev found or none char left.
      (progn
	(setq p2 (point) )
	(while (= 32 (char-before p2))
	  (decf p2)
	  (backward-char 1))
	(skip-chars-backward "^ \t\n" -10)
	(setq p1 (point) )
	(while (and (not resultSymbol) (>= (- p2 p1) 1) )
	  (setq inputStr (buffer-substring-no-properties p1 p2) )
	  (setq resultSymbol (sci-abbr-to-symbol inputStr))
	  (when resultSymbol (progn (goto-char p2) (delete-region p1 p2) (insert resultSymbol)) )
	  (setq p1 (1+ p1)) ) ))

    (when (not resultSymbol)
      (goto-char p2)
      (when print-message-when-no-match (sci-list-math-symbols) (error "「%s」 is not a valid abbrevation or input. Call “sci-list-math-symbols” for a list. Or use a decimal e.g. 「945」 or hexadecimal e.g. 「x3b1」, or full Unicode name e.g. 「greek small letter alpha」."  inputStr)))))

(define-minor-mode sci-mode
  "Toggle math symbol input (minor) mode.

A mode for inputting a few math and other Unicode symbols.

Type “inf”, then press 【Shift+Space】, then it becomes “∞”.
Other examples:
 a ⇒ α
 p ⇒ π
 != ⇒ ≠
 >= ⇒ ≥
 => ⇒ ⇒
 -> ⇒ →
 and ⇒ ∧
etc.

If you have a text selection, then selected word will be taken as
input. For example, type 「sin(a)」, select the “a”, then press
 【Shift+Space】, then it becomse 「sin(α)」.

For the complete list of abbrevs, call `sci-list-math-symbols'.
All XML char entity abbrevs are supported. For example, 「copy」 ⇒ 「©」.

Decimal and hexadecimal can also be used. Example:

 945     ← decimal
 #945    ← decimal with prefix #
 &#945;  ← XML entity syntax

 x3b1    ← hexadimal with prefix x
 #x3b1   ← hexadimal with prefix #x
 &#x3b1; ← XML entity syntax

Full Unicode name can also be used, e.g. 「greek small letter alpha」.

If you wish to enter a symbor by full unicode name but do not
know the full name, call `ucs-insert'. Asterisk “*” can be used
as a wildcard to find the char. For example, call
“ucs-insert”, then type 「*arrow」 then Tab, then emacs will list
all unicode char names that has “arrow” in it. (this feature is
part of Emacs 23)

Without argument, toggles the minor mode.
If optional argument is 1, turn it on.
If optional argument is 0, turn it off.

Home page at: URL `http://ergoemacs.org/emacs/sci-math-symbols-input.html'"
  nil
  :global t
  :lighter " Σ"
  :keymap sci-keymap
  )

(provide 'sci-math-symbol)





;; Local Variables:
;; eval:(progn (hs-minor-mode t) (let ((hs-state '((71095 72988 hs) (47512 50146 hs) (46668 47473 hs) (46428 46637 hs) (38827 43893 hs) (37336 38779 hs) (34910 37304 hs) (33418 34829 hs))) (the-mark 'scinartspecialmarku2npbmfydfnwzwnpywxnyxjr)) (dolist (i hs-state) (if (car i) (progn (goto-char (car i)) (hs-find-block-beginning) (hs-hide-block-at-point nil nil))))) (goto-char 74691) (recenter-top-bottom))
;; End:
